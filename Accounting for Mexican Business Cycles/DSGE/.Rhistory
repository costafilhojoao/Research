gdp  = GDP$NY.GDP.MKTP.CN )
colnames( GDP ) <- c("year", "value")
GDP   <- GDP[ order( GDP$year ), ]
# calibration
dbar = round( mean( NFA$value / GDP$value ), 4 )
save.image("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE/calibration.RData")
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE")
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
load("DSGEData.RData")
ar <- Arima( log( tot ), order=c(1,0,0), seasonal=c(0,0,0) )
rhoe = round( ar[["coef"]][["ar1"]], 4 )
resid = ar$residuals
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy=window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de=window( resid, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy=window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de=window( resid, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
resid
resid = ar$residuals * 100
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy=window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de=window( resid, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE")
totdata <- read_xlsx("termsoftrade.xlsx",              # Mexico
sheet = "Hoja1",
range = "D19:D653",
col_names = FALSE)
library(readxl)
totdata <- read_xlsx("termsoftrade.xlsx",              # Mexico
sheet = "Hoja1",
range = "D19:D653",
col_names = FALSE)
tot = 1 / ts( totdata$...1, start = c( 1970, 1 ), frequency = 12 )
library(xts)
tot <- data.frame( time=time( tot ),
tot= tot )
tot$time <- as.Date( tot$time, format='%d/%m/%Y')
tot$tot  <- xts( tot$tot, order.by = tot$time)
tot      <- apply.quarterly( tot$tot, FUN=mean )
tot      <- ts( tot, start = c( 1970, 1 ), freq=4 )
library(forecast)
ar <- Arima( window( log( tot ),
start = c( 1993, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
resid = ar$residuals * 100
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy=window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de=window( resid, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE")
load("shocksData.RData")
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/BCA")
nice_load(file = "BCAdata.RData", object = c("dat1"), rename = NULL)
library(nicethings)
library(nicethings)
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/BCA")
nice_load(file = "BCAdata.RData", object = c("dat1"), rename = NULL)
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE")
base <- subset( dat1,  FREQUENCY == "Q" &      # Quarterly
MEASURE   == "CQRSA")   # Millions of national currency, current prices, quarterly levels, s.a.
rm( dat1 )
PY  <- subset( base,  SUBJECT == "B1_GE" )       # Gross domestic product - expenditure approach
PM  <- subset( base,  SUBJECT == "P7" )          # Imports of goods and services
p = window( ts( as.numeric( PY$ObsValue ), start = c( 1993 , 1), frequency = 4 ),
start = c( 1993, 1), end = c( 2020, 4 ) ); p = p / p[ 1 ] * 100
pm = window( ts( as.numeric( PM$ObsValue ), start = c( 1993 , 1), frequency = 4 ),
start = c( 1993, 1), end = c( 2020, 4 ) ); pm = pm / pm[ 1 ] * 100
tot = pm / p
time   <- c( 1:length( tot ) )
reg    <- lm( log( tot ) ~ time )
beta0  <- reg[["coefficients"]][["(Intercept)"]]
beta1  <- reg[["coefficients"]][["time"]]
trend  <- ts( beta0 + beta1 * time, start = c( 1993, 1 ),
frequency = 4 )
de     <- ( log( tot ) - trend ) * 100
de = rollmean(de, align = "right", k = 4)
library(forecast)
nice_load(file = "DSGEData.RData", object = c("dy"), rename = NULL)
library(xlsx)
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "q", "dy" )
write.xlsx( data, file="data1.xlsx")
totdata <- read_xlsx("termsoftrade.xlsx",              # Mexico
sheet = "Hoja1",
range = "D19:D653",
col_names = FALSE)
tot = 1 / ts( totdata$...1, start = c( 1970, 1 ), frequency = 12 )
tot
totdata <- read_xlsx("termsoftrade.xlsx",              # Mexico
sheet = "Hoja1",
range = "D19:D653",
col_names = FALSE)
totdata$...1
View(totdata)
totdata <- read_xlsx("termsoftrade.xlsx",              # Mexico
sheet = "Hoja1",
range = "B19:D653",
col_names = FALSE)
View(totdata)
colnames( totdata ) = c( "PX", "PM", "tot")
View(totdata)
e = totdata$PM / totdata$PX
e = totdata$PM / totdata$PX * 100
plot( e )
View(totdata)
e = ts( totdata$PM / totdata$PX * 100, start = c( 1970, 1 ), frequency = 12 )
plot( e )
tot <- data.frame( time=time( tot ),
tot= tot )
tot$time <- as.Date( tot$time, format='%d/%m/%Y')
tot$tot  <- xts( tot$tot, order.by = tot$time)
tot      <- apply.quarterly( tot$tot, FUN=mean )
tot      <- ts( tot, start = c( 1970, 1 ), freq=4 )
plot( tot )
library(forecast)
ar <- Arima( window( log( tot ),
start = c( 1993, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
ar$residuals
resid = ar$residuals * 100
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "q", "dy" )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
rhoe = round( ar[["coef"]][["ar1"]], 4 )
ar <- Arima( window( log( tot ),
start = c( 1993, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
de = rollmean( ar$residuals * 100, align = "right", k = 4)
resid = rollmean( ar$residuals * 100, align = "right", k = 4)
rm( de )
resid
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rm( resid)
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
time   <- c( 1:length( tot ) )
reg    <- lm( log( tot ) ~ time )
beta0  <- reg[["coefficients"]][["(Intercept)"]]
beta1  <- reg[["coefficients"]][["time"]]
trend  <- ts( beta0 + beta1 * time, start = c( 1970, 1 ),
frequency = 4 )
plot( trend)
log( tot )
tot
tot <- data.frame( time=time( e ),
tot= e )
tot$time <- as.Date( tot$time, format='%d/%m/%Y')
tot$tot  <- xts( tot$tot, order.by = tot$time)
tot      <- apply.quarterly( tot$tot, FUN=mean )
tot      <- ts( tot, start = c( 1970, 1 ), freq=4 )
time   <- c( 1:length( tot ) )
reg    <- lm( log( tot ) ~ time )
beta0  <- reg[["coefficients"]][["(Intercept)"]]
beta1  <- reg[["coefficients"]][["time"]]
trend  <- ts( beta0 + beta1 * time, start = c( 1970, 1 ),
frequency = 4 )
plot( trend )
tot
ee     <- ( log( tot ) - trend ) * 100
plot( ee )
ar <- Arima( window( log( ee ),
start = c( 1993, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
rhoe = round( ar[["coef"]][["ar1"]], 4 )
ar <- Arima( window( ee,
start = c( 1993, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
ar$residuals
ee     <- ( log( tot ) - trend )
library(forecast)
ar <- Arima( window( log( tot ),
start = c( 1993, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
ar <- Arima( window( ee,
start = c( 1993, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
rhoe = round( ar[["coef"]][["ar1"]], 4 )
ar$residuals
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
ar <- Arima( window( ee,
start = c( 1970, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
de = rollmean( ar$residuals * 100, align = "center", k = 4)
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
de = rollmean( ar$residuals * 100, align = "right", k = 8)
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
de = ar$residuals * 100
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
de = rollmean( ar$residuals * 100, align = "right", k = 2)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
ar <- Arima( window( ee,
start = c( 1993, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
e
ar <- Arima( window( log( tot ),
start = c( 1970, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
plot( de )
ar <- Arima( window( ee,
start = c( 1970, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
plot( de )
tot <- data.frame( time=time( e ),
tot= e )
View(tot)
tot$time <- as.Date( tot$time, format='%d/%m/%Y')
tot$tot
e
tot$tot  <- xts( tot$tot, order.by = tot$time)
tot      <- apply.quarterly( tot$tot, FUN=mean )
tot      <- ts( tot, start = c( 1970, 1 ), freq=4 )
time   <- c( 1:length( tot ) )
reg    <- lm( log( tot ) ~ time )
beta0  <- reg[["coefficients"]][["(Intercept)"]]
beta1  <- reg[["coefficients"]][["time"]]
trend  <- ts( beta0 + beta1 * time, start = c( 1970, 1 ),
frequency = 4 )
ee     <- log( tot ) - trend
plot( ee )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( ee, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
ee
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( ee * 100, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
ar <- Arima( window( ee,
start = c( 1970, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
ar <- Arima( window( ee,
start = c( 1993, 1 ),
end = c( 2015, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2015-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2015, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2015, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
ar <- Arima( window( ee,
start = c( 1993, 1 ),
end = c( 2015, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
ar <- Arima( window( ee,
start = c( 1979, 1 ),
end = c( 2020, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
ar <- Arima( window( log( tot ),
start = c( 1993, 1 ),
end = c( 2015, 4 ) ),
order=c(1,0,0), seasonal=c(0,0,0))
de = rollmean( ar$residuals * 100, align = "right", k = 4)
rhoe = round( ar[["coef"]][["ar1"]], 4 )
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2015-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2015, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2015, 4 ) ) )
colnames( data ) <- c( "quarter", "dy", "de" )
write.xlsx( data, file="data.xlsx")
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE")
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
load("calibration.RData")
alpha = round( mean( 1 - pwt$labsh ), 2 ) # labsh: Share of labour compensation in GDP at current national prices
round( mean( pwt$delta ), 2 )
nice_load(file = "DSGEData.RData", object = c("share_mex"), rename = NULL)  # Imported intermediate goods share of GDP (%)
nice_load(file = "DSGEData.RData", object = c("mex_gdp"), rename = NULL)    # GDP
mex_gdp * share_mex
q
time( q )
frish_lama = .85 ; #from Lama et. al 2022
omega = 1 + 1 / frish_lama
omega = round( 1 + 1 / frish_lama, 4 )
save.image("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE/calibration.RData")
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE")
load("shocksData.RData")
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE")
library(nicethings)
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/BCA")
nice_load(file = "BCAdata.RData", object = c("dat1"), rename = NULL)
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE")
base <- subset( dat1,  FREQUENCY == "Q" &      # Quarterly
MEASURE   == "CQRSA")   # Millions of national currency, current prices, quarterly levels, s.a.
rm( dat1 )
PY  <- subset( base,  SUBJECT == "B1_GE" )       # Gross domestic product - expenditure approach
PM  <- subset( base,  SUBJECT == "P7" )          # Imports of goods and services
p = window( ts( as.numeric( PY$ObsValue ), start = c( 1993 , 1), frequency = 4 ),
start = c( 1993, 1), end = c( 2020, 4 ) ); p = p / p[ 1 ] * 100
pm = window( ts( as.numeric( PM$ObsValue ), start = c( 1993 , 1), frequency = 4 ),
start = c( 1993, 1), end = c( 2020, 4 ) ); pm = pm / pm[ 1 ] * 100
tot = pm / p
e = pm / p
rm( tot )
time   <- c( 1:length( e ) )
reg    <- lm( log( e ) ~ time )
beta0  <- reg[["coefficients"]][["(Intercept)"]]
beta1  <- reg[["coefficients"]][["time"]]
trend  <- ts( beta0 + beta1 * time, start = c( 1993, 1 ),
frequency = 4 )
de     <- ( log( e ) - trend ) * 100
de = rollmean(de, align = "right", k = 4)
library(zoo)
de = rollmean(de, align = "right", k = 4)
plot( de )
library(forecast)
ar <- Arima( window( de, start = c( 1994, 1), end = c( 2020, 4) ),
order=c(1,0,0), seasonal=c(0,0,0) )
+ARIMA
?ARIMA
ar <- Arima( window( de, start = c( 1994, 1), end = c( 2020, 4) ),
order=c(1,0,0), seasonal=c(0,0,0) )
rhoe = round( ar[["coef"]][["ar1"]], 4 )
resid = ar$residuals * 100
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy=window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de=window( resid, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
setwd("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE")
library(xlsx)
nice_load(file = "DSGEData.RData", object = c("dy"), rename = NULL)
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "q", "dy" )
write.xlsx( data, file="data.xlsx")
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
save.image("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE/shocksData.RData")
de
graph <- data.frame( de=de * 100,
dy,
time = time( de ) )
de
plot( de )
graph <- data.frame( de,
dy,
time = time( de ) )
View(data)
ggplot(data) +
geom_line( aes(x = time, y = de, color = "Relative prices" ), size = 1.5, linetype = "dotdash") +
geom_line( aes(x = time, y = dy, color = "Output" ), color = "darkblue", size = 1.5, linetype = "longdash") +
theme_classic() + labs(x = "", y= "" ) +
theme(text = element_text(size=14) ) +
scale_y_continuous( labels = label_number(accuracy = 1)) +
scale_color_manual(name = "", values = c( "Real Exchange Rate" = "darkred",
"Output" = "darkblue") ) +
theme(legend.text=element_text(size=12), legend.position = c(0.45, 0.95) )
library( ggplot2)
ggplot(data) +
geom_line( aes(x = time, y = de, color = "Relative prices" ), size = 1.5, linetype = "dotdash") +
geom_line( aes(x = time, y = dy, color = "Output" ), color = "darkblue", size = 1.5, linetype = "longdash") +
theme_classic() + labs(x = "", y= "" ) +
theme(text = element_text(size=14) ) +
scale_y_continuous( labels = label_number(accuracy = 1)) +
scale_color_manual(name = "", values = c( "Real Exchange Rate" = "darkred",
"Output" = "darkblue") ) +
theme(legend.text=element_text(size=12), legend.position = c(0.45, 0.95) )
library(ggplot2)
ggplot(data) +
geom_line( aes(x = time, y = de, color = "Relative prices" ), size = 1.5, linetype = "dotdash") +
geom_line( aes(x = time, y = dy, color = "Output" ), color = "darkblue", size = 1.5, linetype = "longdash") +
theme_classic() + labs(x = "", y= "" ) +
theme(text = element_text(size=14) ) +
scale_y_continuous( labels = label_number(accuracy = 1)) +
scale_color_manual(name = "", values = c( "Real Exchange Rate" = "darkred",
"Output" = "darkblue") ) +
theme(legend.text=element_text(size=12), legend.position = c(0.45, 0.95) )
library(scales)
ggplot(data) +
geom_line( aes(x = time, y = de, color = "Relative prices" ), size = 1.5, linetype = "dotdash") +
geom_line( aes(x = time, y = dy, color = "Output" ), color = "darkblue", size = 1.5, linetype = "longdash") +
theme_classic() + labs(x = "", y= "" ) +
theme(text = element_text(size=14) ) +
scale_y_continuous( labels = label_number(accuracy = 1)) +
scale_color_manual(name = "", values = c( "Real Exchange Rate" = "darkred",
"Output" = "darkblue") ) +
theme(legend.text=element_text(size=12), legend.position = c(0.45, 0.95) )
ggplot(data) +
geom_line( aes(x = time, y = de, color = "Relative prices" ), size = 1.5, linetype = "dotdash") +
geom_line( aes(x = time, y = dy, color = "Output" ), color = "darkblue", size = 1.5, linetype = "longdash") +
theme_classic() + labs(x = "", y= "" ) +
theme(text = element_text(size=14) ) +
scale_y_continuous( labels = label_number(accuracy = 1)) +
scale_color_manual(name = "", values = c( "Relative prices" = "darkred",
"Output" = "darkblue") ) +
theme(legend.text=element_text(size=12), legend.position = c(0.45, 0.95) )
View(data)
data  <- data.frame( time = seq(as.Date('1994-01-01'), as.Date('2020-12-01'), by='quarter'),
dy   = window( dy, start = c( 1994, 1 ), end = c( 2020, 4 ) ),
de   = window( de, start = c( 1994, 1 ), end = c( 2020, 4 ) ) )
colnames( data ) <- c( "quarter", "q", "dy" )
write.xlsx( data, file="data.xlsx")
save.image("G:/Meu Drive/Documents/Papers/Acadêmicos/Research/Accounting for Mexican Business Cycles/DSGE/shocksData.RData")
