function g2 = dynamic_g2(T, y, x, params, steady_state, it_, T_flag)
% function g2 = dynamic_g2(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g2
%

if T_flag
    T = NK_Course.dynamic_g2_tt(T, y, x, params, steady_state, it_);
end
v2 = zeros(104,3);
v2(1,1)=1;
v2(2,1)=1;
v2(3,1)=1;
v2(4,1)=1;
v2(5,1)=2;
v2(6,1)=2;
v2(7,1)=2;
v2(8,1)=2;
v2(9,1)=4;
v2(10,1)=4;
v2(11,1)=4;
v2(12,1)=4;
v2(13,1)=4;
v2(14,1)=4;
v2(15,1)=4;
v2(16,1)=5;
v2(17,1)=5;
v2(18,1)=5;
v2(19,1)=5;
v2(20,1)=5;
v2(21,1)=5;
v2(22,1)=5;
v2(23,1)=5;
v2(24,1)=5;
v2(25,1)=7;
v2(26,1)=7;
v2(27,1)=7;
v2(28,1)=7;
v2(29,1)=7;
v2(30,1)=7;
v2(31,1)=7;
v2(32,1)=7;
v2(33,1)=7;
v2(34,1)=8;
v2(35,1)=8;
v2(36,1)=8;
v2(37,1)=8;
v2(38,1)=8;
v2(39,1)=8;
v2(40,1)=8;
v2(41,1)=10;
v2(42,1)=10;
v2(43,1)=10;
v2(44,1)=11;
v2(45,1)=11;
v2(46,1)=11;
v2(47,1)=12;
v2(48,1)=12;
v2(49,1)=12;
v2(50,1)=12;
v2(51,1)=12;
v2(52,1)=12;
v2(53,1)=12;
v2(54,1)=12;
v2(55,1)=13;
v2(56,1)=13;
v2(57,1)=13;
v2(58,1)=14;
v2(59,1)=15;
v2(60,1)=15;
v2(61,1)=16;
v2(62,1)=16;
v2(63,1)=16;
v2(64,1)=16;
v2(65,1)=16;
v2(66,1)=16;
v2(67,1)=16;
v2(68,1)=17;
v2(69,1)=17;
v2(70,1)=17;
v2(71,1)=17;
v2(72,1)=17;
v2(73,1)=18;
v2(74,1)=18;
v2(75,1)=18;
v2(76,1)=18;
v2(77,1)=18;
v2(78,1)=18;
v2(79,1)=19;
v2(80,1)=19;
v2(81,1)=20;
v2(82,1)=20;
v2(83,1)=20;
v2(84,1)=20;
v2(85,1)=20;
v2(86,1)=20;
v2(87,1)=21;
v2(88,1)=21;
v2(89,1)=21;
v2(90,1)=22;
v2(91,1)=22;
v2(92,1)=22;
v2(93,1)=23;
v2(94,1)=23;
v2(95,1)=23;
v2(96,1)=23;
v2(97,1)=23;
v2(98,1)=25;
v2(99,1)=25;
v2(100,1)=25;
v2(101,1)=26;
v2(102,1)=26;
v2(103,1)=27;
v2(104,1)=27;
v2(1,2)=460;
v2(2,2)=468;
v2(3,2)=860;
v2(4,2)=868;
v2(5,2)=460;
v2(6,2)=468;
v2(7,2)=860;
v2(8,2)=868;
v2(9,2)=381;
v2(10,2)=1508;
v2(11,2)=356;
v2(12,2)=258;
v2(13,2)=1531;
v2(14,2)=1506;
v2(15,2)=281;
v2(16,2)=358;
v2(17,2)=360;
v2(18,2)=458;
v2(19,2)=368;
v2(20,2)=858;
v2(21,2)=460;
v2(22,2)=468;
v2(23,2)=860;
v2(24,2)=868;
v2(25,2)=460;
v2(26,2)=452;
v2(27,2)=60;
v2(28,2)=469;
v2(29,2)=910;
v2(30,2)=52;
v2(31,2)=69;
v2(32,2)=902;
v2(33,2)=919;
v2(34,2)=460;
v2(35,2)=462;
v2(36,2)=560;
v2(37,2)=464;
v2(38,2)=660;
v2(39,2)=564;
v2(40,2)=662;
v2(41,2)=103;
v2(42,2)=116;
v2(43,2)=753;
v2(44,2)=771;
v2(45,2)=1016;
v2(46,2)=1021;
v2(47,2)=1;
v2(48,2)=21;
v2(49,2)=1001;
v2(50,2)=22;
v2(51,2)=1051;
v2(52,2)=1021;
v2(53,2)=1022;
v2(54,2)=1071;
v2(55,2)=1021;
v2(56,2)=1022;
v2(57,2)=1071;
v2(58,2)=1531;
v2(59,2)=283;
v2(60,2)=1606;
v2(61,2)=564;
v2(62,2)=662;
v2(63,2)=552;
v2(64,2)=62;
v2(65,2)=652;
v2(66,2)=64;
v2(67,2)=52;
v2(68,2)=1072;
v2(69,2)=1094;
v2(70,2)=2172;
v2(71,2)=1597;
v2(72,2)=2332;
v2(73,2)=461;
v2(74,2)=510;
v2(75,2)=467;
v2(76,2)=810;
v2(77,2)=517;
v2(78,2)=811;
v2(79,2)=363;
v2(80,2)=608;
v2(81,2)=363;
v2(82,2)=608;
v2(83,2)=376;
v2(84,2)=1258;
v2(85,2)=626;
v2(86,2)=1263;
v2(87,2)=1331;
v2(88,2)=1527;
v2(89,2)=1531;
v2(90,2)=1431;
v2(91,2)=1529;
v2(92,2)=1531;
v2(93,2)=1327;
v2(94,2)=1329;
v2(95,2)=1427;
v2(96,2)=1429;
v2(97,2)=1531;
v2(98,2)=1531;
v2(99,2)=256;
v2(100,2)=1582;
v2(101,2)=154;
v2(102,2)=919;
v2(103,2)=205;
v2(104,2)=970;
v2(1,3)=(-((T(21)*T(1)*getPowerDeriv(1-y(10),params(2),2)+T(20)*T(20)*T(36))/(1-params(8))));
v2(2,3)=(-((T(21)*T(19)*T(27)+T(20)*T(2)*T(27)*T(36))/(1-params(8))));
v2(3,3)=v2(2,3);
v2(4,3)=(-((T(2)*T(27)*T(2)*T(27)*T(36)+T(21)*T(2)*getPowerDeriv(y(18),1-params(2),2))/(1-params(8))));
v2(5,3)=(-(T(4)*getPowerDeriv(1-y(10),params(2)*(1-params(8)),2)));
v2(6,3)=(-(T(22)*T(28)));
v2(7,3)=v2(6,3);
v2(8,3)=(-(T(5)*(1-params(2))*getPowerDeriv(y(18),(1-params(2))*(1-params(8))-1,2)));
v2(9,3)=(-((-y(6))/(y(31)*y(31))));
v2(10,3)=v2(9,3);
v2(11,3)=(-T(12));
v2(12,3)=v2(11,3);
v2(13,3)=(-(y(8)*(-((-y(6))*(y(31)+y(31))))/(y(31)*y(31)*y(31)*y(31))));
v2(14,3)=(-(y(8)*(-1)/(y(31)*y(31))));
v2(15,3)=v2(14,3);
v2(16,3)=(-((-T(8))*(y(8)+y(8))))/(y(8)*y(8)*y(8)*y(8));
v2(17,3)=(-T(24))/(y(8)*y(8));
v2(18,3)=v2(17,3);
v2(19,3)=(-T(30))/(y(8)*y(8));
v2(20,3)=v2(19,3);
v2(21,3)=T(6)*getPowerDeriv(1-y(10),params(2)*(1-params(8))-1,2)/y(8);
v2(22,3)=T(23)*T(29)/y(8);
v2(23,3)=v2(22,3);
v2(24,3)=T(7)*params(2)*getPowerDeriv(y(18),(1-params(2))*(1-params(8)),2)/y(8);
v2(25,3)=(-(T(10)*y(19)*y(19)*T(37)));
v2(26,3)=(-(y(19)*T(25)*T(26)));
v2(27,3)=v2(26,3);
v2(28,3)=(-(T(10)*(T(25)+y(19)*y(10)*T(37))));
v2(29,3)=v2(28,3);
v2(30,3)=(-(T(9)*getPowerDeriv(y(2),1-params(3),2)));
v2(31,3)=(-(T(26)*y(10)*T(25)));
v2(32,3)=v2(31,3);
v2(33,3)=(-(T(10)*y(10)*y(10)*T(37)));
v2(34,3)=(-((-(y(14)*y(12)*params(3)))*(y(10)+y(10))))/(y(10)*y(10)*y(10)*y(10));
v2(35,3)=(-(params(3)*y(14)))/(y(10)*y(10));
v2(36,3)=v2(35,3);
v2(37,3)=(-(y(12)*params(3)))/(y(10)*y(10));
v2(38,3)=v2(37,3);
v2(39,3)=params(3)/y(10);
v2(40,3)=v2(39,3);
v2(41,3)=(-((-((-y(16))*(y(3)+y(3))))/(y(3)*y(3)*y(3)*y(3))));
v2(42,3)=(-((-1)/(y(3)*y(3))));
v2(43,3)=v2(42,3);
v2(44,3)=params(12)*(y(21)-1)*2.0;
v2(45,3)=v2(44,3);
v2(46,3)=(-(y(16)*(-(params(12)*2.0))));
v2(47,3)=(-((-((-(y(21)*(y(21)-1)*params(12)*2.0*y(22)))*(y(1)+y(1))))/(y(1)*y(1)*y(1)*y(1))));
v2(48,3)=(-((-(y(22)*((y(21)-1)*params(12)*2.0+y(21)*params(12)*2.0)))/(y(1)*y(1))));
v2(49,3)=v2(48,3);
v2(50,3)=(-((-(y(21)*(y(21)-1)*params(12)*2.0))/(y(1)*y(1))));
v2(51,3)=v2(50,3);
v2(52,3)=(-(y(22)*(params(12)*2.0+params(12)*2.0)/y(1)));
v2(53,3)=(-(((y(21)-1)*params(12)*2.0+y(21)*params(12)*2.0)/y(1)));
v2(54,3)=v2(53,3);
v2(55,3)=y(22)*((-(params(12)*2.0))-(params(12)*2.0+params(12)*2.0));
v2(56,3)=(-(params(12)*(y(21)-1)*2.0))-((y(21)-1)*params(12)*2.0+params(12)*y(21)*2.0);
v2(57,3)=v2(56,3);
v2(58,3)=(-((y(31)+y(31))/(y(31)*y(31)*y(31)*y(31))));
v2(59,3)=(-1);
v2(60,3)=v2(59,3);
v2(61,3)=(-((1-params(3))/y(2)));
v2(62,3)=v2(61,3);
v2(63,3)=(-((-((1-params(3))*y(14)))/(y(2)*y(2))));
v2(64,3)=v2(63,3);
v2(65,3)=(-((-(y(12)*(1-params(3))))/(y(2)*y(2))));
v2(66,3)=v2(65,3);
v2(67,3)=(-((-((-(y(12)*(1-params(3))*y(14)))*(y(2)+y(2))))/(y(2)*y(2)*y(2)*y(2))));
v2(68,3)=(-((-((-y(44))*(y(22)+y(22))))/(y(22)*y(22)*y(22)*y(22))));
v2(69,3)=(-((-1)/(y(22)*y(22))));
v2(70,3)=v2(69,3);
v2(71,3)=1;
v2(72,3)=v2(71,3);
v2(73,3)=(-y(17));
v2(74,3)=v2(73,3);
v2(75,3)=(-y(11));
v2(76,3)=v2(75,3);
v2(77,3)=(-y(10));
v2(78,3)=v2(77,3);
v2(79,3)=(-1);
v2(80,3)=v2(79,3);
v2(81,3)=(-(T(13)*y(26)));
v2(82,3)=v2(81,3);
v2(83,3)=(-T(14));
v2(84,3)=v2(83,3);
v2(85,3)=(-(y(8)*T(13)));
v2(86,3)=v2(85,3);
v2(87,3)=(-T(33));
v2(88,3)=v2(87,3);
v2(89,3)=(-(y(27)*T(38)));
v2(90,3)=(-T(34));
v2(91,3)=v2(90,3);
v2(92,3)=(-(y(29)*getPowerDeriv(y(31),params(5),2)));
v2(93,3)=(-((1-params(13))*(T(32)*(-((-y(29))*(y(27)+y(27))))/(y(27)*y(27)*y(27)*y(27))+T(31)*T(31)*T(39))));
v2(94,3)=(-((1-params(13))*(T(32)*(-1)/(y(27)*y(27))+T(31)*1/y(27)*T(39))));
v2(95,3)=v2(94,3);
v2(96,3)=(-((1-params(13))*1/y(27)*1/y(27)*T(39)));
v2(97,3)=(-(params(13)*T(38)));
v2(98,3)=(-(params(15)*(-1)/(y(31)*y(31))));
v2(99,3)=(-(params(14)*(-(T(35)*T(35)))/(T(18)*T(18))));
v2(100,3)=(-(T(35)*T(35)))/(T(17)*T(17));
v2(101,3)=(-(params(9)*(-1)/(y(4)*y(4))));
v2(102,3)=(-1)/(y(19)*y(19));
v2(103,3)=(-(params(10)*(-1)/(y(5)*y(5))));
v2(104,3)=(-1)/(y(20)*y(20));
g2 = sparse(v2(:,1),v2(:,2),v2(:,3),35,2500);
end
