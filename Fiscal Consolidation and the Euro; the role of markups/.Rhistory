t <- dcast( data, formula = obsTime,
fun.aggregate = sum,
value.var = "obsValue" )
View(data)
t <- dcast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
View(t)
?dcast
View(t)
typeof(t$obsTime)
typeof(t$ARG)
sum(data)
t <- data.frame( t)
View(t)
typeof(t)
typeof(data)
rowsum( t)
?rowsum
x <- matrix(runif(100), ncol = 5)
View(x)
typeof(x)
sum(x)
View(t)
colnames(t) <- t$obsTime
rownames(t) <- t$obsTime
View(t)
t$obsTime <- NULL
View(t)
typeof(x)
as.double(t)
as.numeric(t)
View(t)
t <- matrix( t)
View(t)
t <- dcast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
rownames(t) <- t$obsTime
t$obsTime <- NULL
View(t)
rowsum(t)
group <- sample(1:8, 20, TRUE)
(xsum <- rowsum(x, group))
View(xsum)
rm( x, group, xsum)
?dcast
detach("package:reshape2", unload = TRUE)
t <- dcast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
?dcast
library(data.table)
t <- dcast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
rm()
rm(t)
t <- dcast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
View(t)
typeof(t)
View(t)
rownames(t) <- t$obsTime
t$obsTime <- NULL
t <- matrix( t, nrow = nrow(t), ncol = ncol(t))
View(t)
t <- matrix( t, nrow = nrow(t), ncol = ncol(t))
t <- dcast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
rownames(t) <- t$obsTime
t$obsTime <- NULL
detach("package:data.table", unload = TRUE)
library(reshape2)
data <- subset( data_oecd,
LOCATION != "PRT" &
FREQUENCY == "Q" &
MEASURE == "VPVOBARSA" &
SUBJECT == "B1_GE" )
t <- dcast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
rownames(t) <- t$obsTime
t$obsTime <- NULL
View(t)
?acast
dcast
?dcast
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
View(t)
typeof(t)
View(t)
rowsum(t)
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
rm(pt)
t[1]
t[1,1]
t[,1]
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  apply( t[1,],
1,                                   #1 indicates rows
sum,
na.rm = TRUE)
}
View(gdp)
View(t)
sum(t[1,])
sum(t[1,1])
sum(t[230,230])
sum(t[230,30])
sum(t[1,])
t[1,]
typeof(colnames(t))
typeof(data$obsTime)
View(data)
View(data)
data$obsTime <- seq(as.Date('1960-03-01'), as.Date('2021-03-01'), by='quarter')
rownames( t ) <- seq(as.Date('1960-03-01'), as.Date('2021-03-01'), by='quarter')
length(seq(as.Date('1960-03-01'), as.Date('2021-03-01'), by='quarter'))
View(t)
rownames( t ) <- seq(as.Date('1947-03-01'), as.Date('2021-03-01'), by='quarter')
typeof(rownames(t))
View(t)
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
View(t)
t(1,)
t[1,]
View(t)
t <- t[ 50:length(t), ]
t <- t[ 50:nrow(t), ]
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 80:nrow(t), ]
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 110:nrow(t), ]
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 140:nrow(t), ]
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 160:nrow(t), ]
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 190:nrow(t), ]
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 193:nrow(t), ]
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 193:(nrow(t)-5), ]
View(t)
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
View(gdp)
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 197:(nrow(t)-5), ]
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  apply( t[1,],
1,                                   #1 indicates rows
sum,
na.rm = TRUE)
}
View(gdp)
View(t)
data <- subset( data_oecd,
LOCATION != c("PRT", "SAU") &
FREQUENCY == "Q" &
MEASURE == "VPVOBARSA" &
SUBJECT == "B1_GE" )
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 197:(nrow(t)-5), ]
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  apply( t[1,],
1,                                   #1 indicates rows
sum,
na.rm = TRUE)
}
View(t)
rm(i, t)
t <- t[ 197:(nrow(t)-5), ]
data <- subset( data_oecd,
LOCATION != c("PRT", "SAU") &
FREQUENCY == "Q" &
MEASURE == "VPVOBARSA" &
SUBJECT == "B1_GE" )
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
View(t)
t <- t[ 197:(nrow(t)-5), ]
View(t)
data <- subset( data_oecd,
LOCATION != "PRT" | LOCATION != "SAU" &
FREQUENCY == "Q" &
MEASURE == "VPVOBARSA" &
SUBJECT == "B1_GE" )
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 197:(nrow(t)-5), ]
data <- subset( data_oecd,
LOCATION != "PRT" | LOCATION != "SAU" &
FREQUENCY == "Q" &
MEASURE == "VPVOBARSA" &
SUBJECT == "B1_GE" )
View(data)
data <- subset( data_oecd,
LOCATION != "PRT" &
FREQUENCY == "Q" &
MEASURE == "VPVOBARSA" &
SUBJECT == "B1_GE" )
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 197:(nrow(t)-5), ]
View(t)
View(t)
t[col == "SAU"]
data <- subset( data,
LOCATION != "SAU")
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 201:(nrow(t)-5), ]
View(t)
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  apply( t[1,],
1,                                   #1 indicates rows
sum,
na.rm = TRUE)
}
View(gdp)
View(t)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  apply( t,
1,                                   #1 indicates rows
sum,
na.rm = TRUE)
}
View(gdp)
?apply
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  apply( t[i,],
1,                                   #1 indicates rows
sum,
na.rm = TRUE)
}
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  apply( t[i,],
2,                                   #1 indicates rows
sum,
na.rm = TRUE)
}
gdp[ i ]  <-  apply( t,
1,   #1 indicates rows
sum,
na.rm = TRUE)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  apply( t,
1,   #1 indicates rows
mean,
na.rm = TRUE)
}
gdp[ i ]  <-  apply( t,
1,   #1 indicates rows
sum,
na.rm = TRUE)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  apply( t,
1,   #1 indicates rows
sum,
na.rm = TRUE)
}
rm(i)
plot(gdp)
View(t)
sum( t[1,])
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  sum( t[i,])
}
View(gdp)
plot(gdpp)
plot(gdp)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  sum( t[i,])
}
rm(i)
plot(gdp)
t <- t[ 197:(nrow(t)-5), ]
View(t)
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 193:(nrow(t)-5), ]
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  sum( t[i,])
}
rm(i)
plot(gpd)
plot(gdp)
?Acf
library(urca)
yw <- log( gdp )
yw <- ts( log( gdp ), start = c( 1995, 1), frequency = 4 )
plot(yw)
autoplot(cpt.meanvar(yw))
seasplot(yw, outplot = 4)
Acf(yw, lag.max = 12, main='ACF')
library(TStools)
Acf(yw, lag.max = 12, main='ACF')
library(tstools)
Acf(yw, lag.max = 12, main='ACF')
detach("package:tstools", unload = TRUE)
forecast
library(forecast)
Acf(yw, lag.max = 12, main='ACF')
par(mfrow=c(1,2))
Acf(yw, lag.max = 12, main='ACF')
Pacf(yw, lag.max = 12, main='PACF')
par(mfrow=c(1,1))
## Função que minimiza um critério de informação
auto.arima <- auto.arima(ipca, max.p=5, max.q=5, max.P=2, max.Q=2,
seasonal = F)
## Função que minimiza um critério de informação
auto.arima <- auto.arima(yw, max.p=5, max.q=5, max.P=2, max.Q=2,
seasonal = F)
summary(auto.arima)
detach("package:urca", unload = TRUE)
data.ct <- ur.df(qw, type = 'trend', selectlags = 'AIC')
library(urca)
data.ct <- ur.df(qw, type = 'trend', selectlags = 'AIC')
data.ct <- ur.df(yw, type = 'trend', selectlags = 'AIC')
trend <- cbind(t(data.ct@teststat), data.ct@cval)
trend
data.ct <- ur.df(yw, type = 'trend', selectlags = 'AIC')
Yw
yw
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
t <- t[ 201:(nrow(t)-5), ]
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  sum( t[i,])
}
rm(i)
library(forecast)
library(urca)
yw <- ts( log( gdp ), start = c( 1995, 1), frequency = 4 )
par(mfrow=c(1,2))
Acf(yw, lag.max = 12, main='ACF')
Pacf(yw, lag.max = 12, main='PACF')
par(mfrow=c(1,1))
## Função que minimiza um critério de informação
auto.arima <- auto.arima(yw, max.p=5, max.q=5, max.P=2, max.Q=2,
seasonal = F)
summary(auto.arima)
data.ct <- ur.df(yw, type = 'trend', selectlags = 'AIC')
trend <- cbind(t(data.ct@teststat), data.ct@cval)
trend
?Arima
arima <- Arima(yw, order=c(2,1,0), seasonal=c(0,0,0), include.drift = TRUE)
summary(arima)
par(mfrow=c(1,2))
plot(yw)
lines(fitted(arima), col='red')
plot(arima$residuals)
par(mfrow=c(1,1))
save.image("C:/Users/jcfil/Google Drive/Documents/Papers/Acadêmicos/Research/Fiscal Consolidation and the Euro; the role of markups/foreign.RData")
foreign <- arima$residuals
library(xlsx)
plot(foreign)
write.xlsx( foreign, file="foreign.xlsx")
plot(yw, xlab = "")
plot(yw, ylab = "")
yw
q <- seq(ISOdate(1996,1,1), by = "quarter", length.out = length(yw))
library(ggplot2)
ggplot(data = data, aes(x = trimestre, y = lnpib))+
geom_line(color = "#00AFBB", size = 1.2)+
labs(x = "", y="ln do PIB")+
theme_set(theme_bw())
dados = data.frame( yw, q )
library(ggplot2)
ggplot(data = dados, aes(x = q, y = lnpib))+
geom_line(color = "#00AFBB", size = 1.2)+
labs(x = "", y="ln do PIB")+
theme_set(theme_bw())
library(ggplot2)
ggplot(data = dados, aes(x = q, y = yw))+
geom_line(color = "#00AFBB", size = 1.2)+
labs(x = "", y="ln do PIB")+
theme_set(theme_bw())
ggplot(data = dados, aes(x = q, y = yw))+
geom_line(color = "#00AFBB", size = 1.2)+
labs(x = "", y="ln do PIB da OCDE*", caption = "Fonte: OCDE; Ajustado (PPP); Exclui Portugal")+
theme_set(theme_bw())
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  sum( t[i,])
}
rm(i)
ggplot(data = dados, aes(x = q, y = yw))+
geom_line(color = "#00AFBB", size = 1.2)+
labs(x = "", y="ln do PIB da OCDE*", caption = "Fonte: OCDE; Ajustado (PPP); Exclui Portugal")+
theme_set(theme_bw())
dados = data.frame( yw, q )
library(ggplot2)
ggplot(data = dados, aes(x = q, y = yw))+
geom_line(color = "#00AFBB", size = 1.2)+
labs(x = "", y="ln do PIB da OCDE*", caption = "Fonte: OCDE; Ajustado (PPP); Exclui Portugal")+
theme_set(theme_bw())
yw <- ts( log( gdp ), start = c( 1995, 1), frequency = 4 )
ggplot(data = dados, aes(x = q, y = yw))+
geom_line(color = "#00AFBB", size = 1.2)+
labs(x = "", y="ln do PIB da OCDE*", caption = "Fonte: OCDE; Ajustado (PPP); Exclui Portugal")+
theme_set(theme_bw())
q <- seq(ISOdate(1996,1,1), by = "quarter", length.out = length(yw))
dados = data.frame( yw, q )
ggplot(data = dados, aes(x = q, y = yw))+
geom_line(color = "#00AFBB", size = 1.2)+
labs(x = "", y="ln do PIB da OCDE*", caption = "Fonte: OCDE; Ajustado (PPP); Exclui Portugal")+
theme_set(theme_bw())
yw
t <- acast( data, formula = obsTime~LOCATION,
fun.aggregate = NULL,
value.var = "obsValue" )
View(t)
t <- t[ 201:(nrow(t)), ]
gdp <- matrix(data = NA,
nrow = nrow( t ),
ncol = 1
)
for ( i in 1:nrow( gdp ) ) {
gdp[ i ]  <-  sum( t[i,])
}
rm(i)
View(t)
View(t)
yw <- ts( log( gdp ), start = c( 1997, 1), frequency = 4 )
q <- seq(ISOdate(1997,1,1), by = "quarter", length.out = length(yw))
dados = data.frame( yw, q )
ggplot(data = dados, aes(x = q, y = yw))+
geom_line(color = "#00AFBB", size = 1.2)+
labs(x = "", y="ln do PIB da OCDE*", caption = "Fonte: OCDE; Ajustado (PPP); Exclui Portugal")+
theme_set(theme_bw())
install.packages("bookdown")
getwd()
