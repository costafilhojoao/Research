x0 <- c(0.92, 0.95, 0.48)
result <- fsolve( steady, x0 )
h       = result$x[1]
hprime  = result$x[2]
bprime  = result$x[3]
nxprime = -bprime * ( 1 + r )
yprime  = hprime ^ alpha
cprime = yprime - nxprime
wprime = hprime ^ omega * cprime ^ theta
y      = h ^ alpha
nx      = bprime
c      = y - nx
w      = h ^ omega * c ^ theta
varepsilonprime = varepsilon * ( 1 - delta)
p      = ( psi * varepsilon / y  ) ^ ( 1 / sigma )
pprime = ( psi * varepsilonprime / yprime  ) ^ ( 1 / sigma )
MgC      = gamma * w * y ^ ( gamma - 1 )
MgCprime = gamma * wprime * yprime ^ ( gamma - 1 )
mu       = p / MgC
muprime  = pprime / MgCprime
x = data.frame(c, cprime, h, hprime, bprime, w, wprime, r, y, yprime, mu, muprime, nx, nxprime, p, pprime)
return( x )
}
model0 = benchmark( 1 )
model1 = benchmark( 0.8 )
output = c( 0,
log( model1$y / model0$y ),
rep( log( model1$yprime / model0$yprime ), 2 ) )
consumption = c( 0,
log( model1$c / model0$c ),
rep( log( model1$cprime / model0$cprime ), 2 ) )
hours = c( 0,
log( model1$h / model0$h ),
rep( log( model1$hprime / model0$hprime ), 2 ) )
markups = c( 0,
log( model1$mu / model0$mu ),
rep( log( model1$muprime / model0$muprime ), 2 ) )
#figurename <-paste0('figure',figure[ 1 ],'.jpg', sep = '')
#jpeg(figurename, quality = 800, bg="transparent")
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "Time") + ylab( TeX( "$\\hat{\\mu}$" ) ) +
theme( axis.text.x = element_blank(), axis.ticks.x=element_blank())
benchmark <- function( varepsilon  ){
r               = rbar
steady <- function( x ) {
h      <- x[1]
hprime <- x[2]
bprime <- x[3]
#E
res1 = h - ( 1 - delta ) ^ ( 1 / ( alpha * Omega ) ) * hprime
#F
res2 = h ^ alpha - ( ( psi * varepsilon ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
h ^ Omega * ( 1 / gamma )  ) ^ ( 1 / theta ) - bprime
#G
res3 = hprime ^ alpha - ( psi * varepsilon * ( 1 - delta ) ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
hprime ^ Omega * 1 / gamma + bprime * ( 1 + r )
results = c( res1, res2, res3)
return(results)
}
x0 <- c(0.92, 0.52, 0.48)
x0 <- c(0.92, 0.91, 0.48)
result <- fsolve( steady, x0 )
h       = result$x[1]
hprime  = result$x[2]
bprime  = result$x[3]
nxprime = -bprime * ( 1 + r )
yprime  = hprime ^ alpha
cprime = yprime - nxprime
wprime = hprime ^ omega * cprime ^ theta
y      = h ^ alpha
nx      = bprime
c      = y - nx
w      = h ^ omega * c ^ theta
varepsilonprime = varepsilon * ( 1 - delta)
p      = ( psi * varepsilon / y  ) ^ ( 1 / sigma )
pprime = ( psi * varepsilonprime / yprime  ) ^ ( 1 / sigma )
MgC      = gamma * w * y ^ ( gamma - 1 )
MgCprime = gamma * wprime * yprime ^ ( gamma - 1 )
mu       = p / MgC
muprime  = pprime / MgCprime
x = data.frame(c, cprime, h, hprime, bprime, w, wprime, r, y, yprime, mu, muprime, nx, nxprime, p, pprime)
return( x )
}
model0 = benchmark( 1 )
model1 = benchmark( 0.8 )
output = c( 0,
log( model1$y / model0$y ),
rep( log( model1$yprime / model0$yprime ), 2 ) )
consumption = c( 0,
log( model1$c / model0$c ),
rep( log( model1$cprime / model0$cprime ), 2 ) )
hours = c( 0,
log( model1$h / model0$h ),
rep( log( model1$hprime / model0$hprime ), 2 ) )
markups = c( 0,
log( model1$mu / model0$mu ),
rep( log( model1$muprime / model0$muprime ), 2 ) )
figure <- seq( 1, 10000 )
data = data.frame( var = output*100, x = seq( 1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = consumption*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = hours*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = markups*100, x = seq(1, length( output ) ) )
#figurename <-paste0('figure',figure[ 1 ],'.jpg', sep = '')
#jpeg(figurename, quality = 800, bg="transparent")
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "Time") + ylab( TeX( "$\\hat{\\mu}$" ) ) +
theme( axis.text.x = element_blank(), axis.ticks.x=element_blank())
sigma = 2
benchmark <- function( varepsilon  ){
r               = rbar
steady <- function( x ) {
h      <- x[1]
hprime <- x[2]
bprime <- x[3]
#E
res1 = h - ( 1 - delta ) ^ ( 1 / ( alpha * Omega ) ) * hprime
#F
res2 = h ^ alpha - ( ( psi * varepsilon ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
h ^ Omega * ( 1 / gamma )  ) ^ ( 1 / theta ) - bprime
#G
res3 = hprime ^ alpha - ( psi * varepsilon * ( 1 - delta ) ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
hprime ^ Omega * 1 / gamma + bprime * ( 1 + r )
results = c( res1, res2, res3)
return(results)
}
x0 <- c(0.92, 0.52, 0.48)
x0 <- c(0.92, 0.91, 0.48)
result <- fsolve( steady, x0 )
h       = result$x[1]
hprime  = result$x[2]
bprime  = result$x[3]
nxprime = -bprime * ( 1 + r )
yprime  = hprime ^ alpha
cprime = yprime - nxprime
wprime = hprime ^ omega * cprime ^ theta
y      = h ^ alpha
nx      = bprime
c      = y - nx
w      = h ^ omega * c ^ theta
varepsilonprime = varepsilon * ( 1 - delta)
p      = ( psi * varepsilon / y  ) ^ ( 1 / sigma )
pprime = ( psi * varepsilonprime / yprime  ) ^ ( 1 / sigma )
MgC      = gamma * w * y ^ ( gamma - 1 )
MgCprime = gamma * wprime * yprime ^ ( gamma - 1 )
mu       = p / MgC
muprime  = pprime / MgCprime
x = data.frame(c, cprime, h, hprime, bprime, w, wprime, r, y, yprime, mu, muprime, nx, nxprime, p, pprime)
return( x )
}
model0 = benchmark( 1 )
model1 = benchmark( 0.8 )
output = c( 0,
log( model1$y / model0$y ),
rep( log( model1$yprime / model0$yprime ), 2 ) )
consumption = c( 0,
log( model1$c / model0$c ),
rep( log( model1$cprime / model0$cprime ), 2 ) )
hours = c( 0,
log( model1$h / model0$h ),
rep( log( model1$hprime / model0$hprime ), 2 ) )
markups = c( 0,
log( model1$mu / model0$mu ),
rep( log( model1$muprime / model0$muprime ), 2 ) )
figure <- seq( 1, 10000 )
data = data.frame( var = output*100, x = seq( 1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = consumption*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = hours*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = markups*100, x = seq(1, length( output ) ) )
#figurename <-paste0('figure',figure[ 1 ],'.jpg', sep = '')
#jpeg(figurename, quality = 800, bg="transparent")
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "Time") + ylab( TeX( "$\\hat{\\mu}$" ) ) +
theme( axis.text.x = element_blank(), axis.ticks.x=element_blank())
rbar       = 0.03
benchmark <- function( varepsilon  ){
r               = rbar
steady <- function( x ) {
h      <- x[1]
hprime <- x[2]
bprime <- x[3]
#E
res1 = h - ( 1 - delta ) ^ ( 1 / ( alpha * Omega ) ) * hprime
#F
res2 = h ^ alpha - ( ( psi * varepsilon ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
h ^ Omega * ( 1 / gamma )  ) ^ ( 1 / theta ) - bprime
#G
res3 = hprime ^ alpha - ( psi * varepsilon * ( 1 - delta ) ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
hprime ^ Omega * 1 / gamma + bprime * ( 1 + r )
results = c( res1, res2, res3)
return(results)
}
x0 <- c(0.92, 0.52, 0.48)
x0 <- c(0.92, 0.91, 0.48)
result <- fsolve( steady, x0 )
h       = result$x[1]
hprime  = result$x[2]
bprime  = result$x[3]
nxprime = -bprime * ( 1 + r )
yprime  = hprime ^ alpha
cprime = yprime - nxprime
wprime = hprime ^ omega * cprime ^ theta
y      = h ^ alpha
nx      = bprime
c      = y - nx
w      = h ^ omega * c ^ theta
varepsilonprime = varepsilon * ( 1 - delta)
p      = ( psi * varepsilon / y  ) ^ ( 1 / sigma )
pprime = ( psi * varepsilonprime / yprime  ) ^ ( 1 / sigma )
MgC      = gamma * w * y ^ ( gamma - 1 )
MgCprime = gamma * wprime * yprime ^ ( gamma - 1 )
mu       = p / MgC
muprime  = pprime / MgCprime
x = data.frame(c, cprime, h, hprime, bprime, w, wprime, r, y, yprime, mu, muprime, nx, nxprime, p, pprime)
return( x )
}
model0 = benchmark( 1 )
model1 = benchmark( 0.8 )
output = c( 0,
log( model1$y / model0$y ),
rep( log( model1$yprime / model0$yprime ), 2 ) )
consumption = c( 0,
log( model1$c / model0$c ),
rep( log( model1$cprime / model0$cprime ), 2 ) )
hours = c( 0,
log( model1$h / model0$h ),
rep( log( model1$hprime / model0$hprime ), 2 ) )
markups = c( 0,
log( model1$mu / model0$mu ),
rep( log( model1$muprime / model0$muprime ), 2 ) )
figure <- seq( 1, 10000 )
data = data.frame( var = output*100, x = seq( 1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = consumption*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = hours*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = markups*100, x = seq(1, length( output ) ) )
#figurename <-paste0('figure',figure[ 1 ],'.jpg', sep = '')
#jpeg(figurename, quality = 800, bg="transparent")
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "Time") + ylab( TeX( "$\\hat{\\mu}$" ) ) +
theme( axis.text.x = element_blank(), axis.ticks.x=element_blank())
rbar       = 0.02
Omega      = alpha * ( sigma * (1 - gamma) - 1 ) / sigma - omega
sigma = 2
Omega      = alpha * ( sigma * (1 - gamma) - 1 ) / sigma - omega
benchmark <- function( varepsilon  ){
r               = rbar
steady <- function( x ) {
h      <- x[1]
hprime <- x[2]
bprime <- x[3]
#E
res1 = h - ( 1 - delta ) ^ ( 1 / ( alpha * Omega ) ) * hprime
#F
res2 = h ^ alpha - ( ( psi * varepsilon ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
h ^ Omega * ( 1 / gamma )  ) ^ ( 1 / theta ) - bprime
#G
res3 = hprime ^ alpha - ( psi * varepsilon * ( 1 - delta ) ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
hprime ^ Omega * 1 / gamma + bprime * ( 1 + r )
results = c( res1, res2, res3)
return(results)
}
x0 <- c(0.92, 0.52, 0.48)
x0 <- c(0.92, 0.91, 0.48)
result <- fsolve( steady, x0 )
h       = result$x[1]
hprime  = result$x[2]
bprime  = result$x[3]
nxprime = -bprime * ( 1 + r )
yprime  = hprime ^ alpha
cprime = yprime - nxprime
wprime = hprime ^ omega * cprime ^ theta
y      = h ^ alpha
nx      = bprime
c      = y - nx
w      = h ^ omega * c ^ theta
varepsilonprime = varepsilon * ( 1 - delta)
p      = ( psi * varepsilon / y  ) ^ ( 1 / sigma )
pprime = ( psi * varepsilonprime / yprime  ) ^ ( 1 / sigma )
MgC      = gamma * w * y ^ ( gamma - 1 )
MgCprime = gamma * wprime * yprime ^ ( gamma - 1 )
mu       = p / MgC
muprime  = pprime / MgCprime
x = data.frame(c, cprime, h, hprime, bprime, w, wprime, r, y, yprime, mu, muprime, nx, nxprime, p, pprime)
return( x )
}
model0 = benchmark( 1 )
model1 = benchmark( 0.8 )
output = c( 0,
log( model1$y / model0$y ),
rep( log( model1$yprime / model0$yprime ), 2 ) )
consumption = c( 0,
log( model1$c / model0$c ),
rep( log( model1$cprime / model0$cprime ), 2 ) )
hours = c( 0,
log( model1$h / model0$h ),
rep( log( model1$hprime / model0$hprime ), 2 ) )
markups = c( 0,
log( model1$mu / model0$mu ),
rep( log( model1$muprime / model0$muprime ), 2 ) )
figure <- seq( 1, 10000 )
data = data.frame( var = output*100, x = seq( 1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = consumption*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = hours*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = markups*100, x = seq(1, length( output ) ) )
#figurename <-paste0('figure',figure[ 1 ],'.jpg', sep = '')
#jpeg(figurename, quality = 800, bg="transparent")
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "Time") + ylab( TeX( "$\\hat{\\mu}$" ) ) +
theme( axis.text.x = element_blank(), axis.ticks.x=element_blank())
sigma      = 2.9
Omega      = alpha * ( sigma * (1 - gamma) - 1 ) / sigma - omega
theta      = 2
benchmark <- function( varepsilon  ){
r               = rbar
steady <- function( x ) {
h      <- x[1]
hprime <- x[2]
bprime <- x[3]
#E
res1 = h - ( 1 - delta ) ^ ( 1 / ( alpha * Omega ) ) * hprime
#F
res2 = h ^ alpha - ( ( psi * varepsilon ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
h ^ Omega * ( 1 / gamma )  ) ^ ( 1 / theta ) - bprime
#G
res3 = hprime ^ alpha - ( psi * varepsilon * ( 1 - delta ) ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
hprime ^ Omega * 1 / gamma + bprime * ( 1 + r )
results = c( res1, res2, res3)
return(results)
}
x0 <- c(0.92, 0.52, 0.48)
x0 <- c(0.92, 0.91, 0.48)
result <- fsolve( steady, x0 )
h       = result$x[1]
hprime  = result$x[2]
bprime  = result$x[3]
nxprime = -bprime * ( 1 + r )
yprime  = hprime ^ alpha
cprime = yprime - nxprime
wprime = hprime ^ omega * cprime ^ theta
y      = h ^ alpha
nx      = bprime
c      = y - nx
w      = h ^ omega * c ^ theta
varepsilonprime = varepsilon * ( 1 - delta)
p      = ( psi * varepsilon / y  ) ^ ( 1 / sigma )
pprime = ( psi * varepsilonprime / yprime  ) ^ ( 1 / sigma )
MgC      = gamma * w * y ^ ( gamma - 1 )
MgCprime = gamma * wprime * yprime ^ ( gamma - 1 )
mu       = p / MgC
muprime  = pprime / MgCprime
x = data.frame(c, cprime, h, hprime, bprime, w, wprime, r, y, yprime, mu, muprime, nx, nxprime, p, pprime)
return( x )
}
model0 = benchmark( 1 )
model1 = benchmark( 0.8 )
output = c( 0,
log( model1$y / model0$y ),
rep( log( model1$yprime / model0$yprime ), 2 ) )
consumption = c( 0,
log( model1$c / model0$c ),
rep( log( model1$cprime / model0$cprime ), 2 ) )
hours = c( 0,
log( model1$h / model0$h ),
rep( log( model1$hprime / model0$hprime ), 2 ) )
markups = c( 0,
log( model1$mu / model0$mu ),
rep( log( model1$muprime / model0$muprime ), 2 ) )
figure <- seq( 1, 10000 )
data = data.frame( var = output*100, x = seq( 1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = consumption*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = hours*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = markups*100, x = seq(1, length( output ) ) )
#figurename <-paste0('figure',figure[ 1 ],'.jpg', sep = '')
#jpeg(figurename, quality = 800, bg="transparent")
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "Time") + ylab( TeX( "$\\hat{\\mu}$" ) ) +
theme( axis.text.x = element_blank(), axis.ticks.x=element_blank())
theta      = 1
beta       = 0.95
delta      = 0.5
phi        = 0
psi        = 1
sigma      = 2.9
alpha      = 2/3
gamma      = 1.35
rbar       = 0.02
Omega      = alpha * ( sigma * (1 - gamma) - 1 ) / sigma - omega
benchmark <- function( varepsilon  ){
r               = rbar
steady <- function( x ) {
h      <- x[1]
hprime <- x[2]
bprime <- x[3]
#E
res1 = h - ( 1 - delta ) ^ ( 1 / ( alpha * Omega ) ) * hprime
#F
res2 = h ^ alpha - ( ( psi * varepsilon ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
h ^ Omega * ( 1 / gamma )  ) ^ ( 1 / theta ) - bprime
#G
res3 = hprime ^ alpha - ( psi * varepsilon * ( 1 - delta ) ) ^ ( 1 / sigma ) * ( sigma - 1 ) / sigma *
hprime ^ Omega * 1 / gamma + bprime * ( 1 + r )
results = c( res1, res2, res3)
return(results)
}
x0 <- c(0.92, 0.52, 0.48)
x0 <- c(0.92, 0.91, 0.48)
result <- fsolve( steady, x0 )
h       = result$x[1]
hprime  = result$x[2]
bprime  = result$x[3]
nxprime = -bprime * ( 1 + r )
yprime  = hprime ^ alpha
cprime = yprime - nxprime
wprime = hprime ^ omega * cprime ^ theta
y      = h ^ alpha
nx      = bprime
c      = y - nx
w      = h ^ omega * c ^ theta
varepsilonprime = varepsilon * ( 1 - delta)
p      = ( psi * varepsilon / y  ) ^ ( 1 / sigma )
pprime = ( psi * varepsilonprime / yprime  ) ^ ( 1 / sigma )
MgC      = gamma * w * y ^ ( gamma - 1 )
MgCprime = gamma * wprime * yprime ^ ( gamma - 1 )
mu       = p / MgC
muprime  = pprime / MgCprime
x = data.frame(c, cprime, h, hprime, bprime, w, wprime, r, y, yprime, mu, muprime, nx, nxprime, p, pprime)
return( x )
}
model0 = benchmark( 1 )
model1 = benchmark( 0.8 )
output = c( 0,
log( model1$y / model0$y ),
rep( log( model1$yprime / model0$yprime ), 2 ) )
consumption = c( 0,
log( model1$c / model0$c ),
rep( log( model1$cprime / model0$cprime ), 2 ) )
hours = c( 0,
log( model1$h / model0$h ),
rep( log( model1$hprime / model0$hprime ), 2 ) )
markups = c( 0,
log( model1$mu / model0$mu ),
rep( log( model1$muprime / model0$muprime ), 2 ) )
figure <- seq( 1, 10000 )
data = data.frame( var = output*100, x = seq( 1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = consumption*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = hours*100, x = seq(1, length( output ) ) )
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1) +
theme_classic()
data = data.frame( var = markups*100, x = seq(1, length( output ) ) )
#figurename <-paste0('figure',figure[ 1 ],'.jpg', sep = '')
#jpeg(figurename, quality = 800, bg="transparent")
ggplot(data, aes(x = x, y = var)) +
geom_path(color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "Time") + ylab( TeX( "$\\hat{\\mu}$" ) ) +
theme( axis.text.x = element_blank(), axis.ticks.x=element_blank())
