install.packagesy("mhurdle")
install.packages("mhurdle")
update.packages("mfbvar")
library(mfbvar)
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
library("dplyr")
library("ggplot2")
library("alfred")
variables <- c("CPIAUCSL", "UNRATE", "GDPC1")
out <- lapply(variables, get_alfred_series,
observation_start = "1980-01-01",
observation_end = "2021-10-11",
realtime_start = "2018-12-10",
realtime_end = "2018-12-10")
alfred_to_ts <- function(x, freq){
ts(x[, 3],
start = c(1980, 1),
frequency = freq)
}
mf_list <- mapply(alfred_to_ts, x = out, freq = c(12, 12, 4))
names(mf_list) <- variables
log_diff <- function(x){
freq <- frequency(x)
100 * freq * diff(log(x))
}
mf_list[c("CPIAUCSL", "GDPC1")] <- lapply(mf_list[c("CPIAUCSL", "GDPC1")],
log_diff)
mf_list <- mapply(window, x = mf_list,
start = list(c(1980, 4), c(1980, 4), c(1980, 2)))
str(mf_list, vec.len = 2)
library(mfbvar)
prior <- set_prior(Y = mf_list, n_lags = 4, n_reps = 1000)
prior_intervals <- matrix(c(1, 3,
4, 8,
1, 3), ncol = 2, byrow = TRUE)
moments <- interval_to_moments(prior_intervals)
prior <- update_prior(prior,
d = "intercept",
prior_psi_mean = moments$prior_psi_mean,
prior_psi_Omega = moments$prior_psi_Omega)
plot(prior)
prior <- update_prior(prior, n_fcst = 24)
summary(prior)
mod_ss_iw <- estimate_mfbvar(prior, prior = "ss", variance = "iw")
mod_ssng_iw <- estimate_mfbvar(prior, prior = "ssng", variance = "iw")
mod_ss_csv <- estimate_mfbvar(prior, prior = "ss", variance = "csv")
predict(mod_ss_iw, pred_bands = 0.8)
View(out)
plot(mod_ss_iw, plot_start = "2010-01-01", nrow_facet = 3)
View(mod_ss_iw)
mod_ss_iw[["Z"]]
View(moments)
View(mod_ss_csv)
View(mod_ss_csv)
View(mod_ss_iw)
mod_ss_csv[["Y"]]
tail(mod_ss_csv[["Y"]])
varplot(mod_ss_iw)
View(mod_ss_csv)
tail(mod_ss_csv[["Y"]])
tail(mod_ss_csv[["init"]][["init_Z"]])
setwd("G:/Meu Drive/Documents/Papers/AcadÃªmicos/Research/The square root of all evil; The role of market power in fiscal consolidations")
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
load("initial.RData")
library(eurostat)
library(tempdisagg)
library(dplyr)
library(nicethings)
library(xlsx)
quarter <- 2010.5
time ( dC )
X_initial = matrix( data = c(
dC [ time ( dC ) == quarter],
dH[ time ( dH ) == quarter],
dlambda[ time ( dlambda ) == quarter],
dP[ time ( dP ) == quarter],
dW[ time ( dW ) == quarter],
dy[ time ( dy ) == quarter],
dY[ time ( dY ) == quarter],
dPI[ time ( dPI ) == quarter],
dMC[ time ( dMC ) == quarter],
dtheta[ time ( dtheta ) == quarter],
dmu[ time ( dmu ) == quarter],
dCD[ time ( dCD ) == quarter],
dCF[ time ( dCF ) == quarter],
dPD[ time ( dPD ) == quarter],
dGD[ time ( dGD ) == quarter],
dGF[ time ( dGF ) == quarter],
dT[ time ( dT ) == quarter],
dX[ time ( dX ) == quarter],
dAC[ time ( dAC ) == quarter],
dACD[ time ( dACD ) == quarter],
dACF[ time ( dACF ) == quarter]
),
nrow = 21,
ncol = 1 )
S_initial = matrix( data = c(
dB[ time ( dB ) == quarter],
dpD[ time ( dpD ) == quarter],
de[ time ( de ) == quarter],
dPF[ time ( dPF ) == quarter],
dG[ time ( dG ) == quarter],
dA[ time ( dA ) == quarter],
di[ time ( di ) == quarter],
dlambdaS[ time ( dlambdaS ) == quarter],
dthetaS[ time ( dthetaS ) == quarter],
dyS[ time ( dyS ) == quarter],
dpDS[ time ( dpDS ) == quarter],
dYS[ time ( dYS ) == quarter],
dPS[ time ( dPS ) == quarter]
),
nrow = 13,
ncol = 1 )
write.xlsx( X_initial, file="X_initial.xlsx")
write.xlsx( S_initial, file="S_initial.xlsx")
dmu[ time ( dmu ) == quarter]
mubar
mu
nice_load(file = "markupsdata.RData", object = c("mu"), rename = NULL)
