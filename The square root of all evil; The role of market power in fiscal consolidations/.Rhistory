View(output_g)
for (j in 1:ncol( output_g ) ){
dados <- subset( base, nace_r2 == nace[ j ] & na_item == "P1" )
dados <- dados[ 1:nrow( output_g ), ]
output_g[ , j ] <- dados$values
}
View(output_g)
taxes  <- matrix( data = syear:eyear,
nrow = eyear - syear + 1,
ncol = length( nace ) )
colnames( taxes ) <- sectors
for (j in 1:ncol( taxes ) ){
dados <- subset( base, nace_r2 == nace[ j ] & na_item == "D29X39" )
dados <- dados[ 1:nrow( taxes ), ]
taxes[ , j ] <- dados$values
}
output <- output_g - taxes
output <- ts( output, start = syear, end = eyear, frequency = 1 )
#matrix for quarterly interpolation
output_q <- matrix( data = NA,
nrow = ( eyear - syear + 1 ) * 4,
ncol = length( nace ) )
colnames( output_q ) <- sectors
#quarterly interpolation
for (j in 1:ncol( output ) ){
m1 <- td(output[,j] ~ 1, to = "quarterly", method = "denton-cholette")
output_q[,j] <- predict( m1 )
}
save.image("C:/Users/jcfil/Google Drive/Documents/Papers/AcadÃªmicos/Research/Fiscal Consolidation and the Euro; the role of markups/markupsdata.RData")
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
#Statistical classification of economic activities in the European Community
nace      <- c("A",
"B",
"C",
"D",
"E",
"F",
"G",
"H",
"I",
"J",
#"K",
"L",
"M",
"N",
#"O", Public administration and defence and compulsory social security were not considered
#"P",
#"Q",
"R",
"S"
)
sectors   <- c("Agriculture, forestry and fishing",
"Mining and quarrying",
"Manufacturing",
"Electricity, gas, steam and air conditioning supply",
"Water supply; sewerage, waste management and remediation activities",
"Construction",
"Wholesale and retail trade; repair of motor vehicles and motorcycles",
"Transportation and storage",
"Accommodation and food service activities",
"Information and communication",
#"Financial and insurance activities",
"Real estate activities",
"Professional, scientific and technical activities",
"Administrative and support service activities",
#"Public administration and defence; compulsory social security" were not conidered
#"Education",
#"Human health and social work activities",
"Arts, entertainment and recreation",
"Other service activities were removed"
)
nice_load(file = "markupsdata.RData", object = c("markups_sector"), rename = NULL)
markups_sector <- markups_sector[["Portugal"]]
markups_sector <- subset( markups_sector, select = sectors )
micro  <- read_dta(file = "agggregate_mkups_by_sector.dta")
colnames(micro) <- c("year", "nace", "markup", "shock")
micro_mkp <- matrix( data = NA,
nrow = 11,
ncol = length( sectors ) )
rownames( micro_mkp ) <- seq( 2004, 2014)
colnames( micro_mkp ) <- sectors
micro_mkp[1,] <- rep( 100, ncol(micro_mkp) )
for (j  in 1:length(nace)) {
for (t  in 2:nrow( micro_mkp )) {
n <- nace[j]
m <- subset( micro, nace == n )
micro_mkp[ t, j ] <- micro_mkp[t-1,j] * ( 1 + m$markup[t] )
}
}
rm(n, m, j, t)
markups_sector_q <- markups_sector
for (j  in 1:length(nace)) {
mu_a_j  <- ts( micro_mkp[ , j ] * 4, start = 2004, frequency = 1 )
mu_q_j  <- ts( markups_sector[ , j ], start = c( 1995, 1), frequency = 4 )
mu <- td( mu_a_j ~ 0 + mu_q_j,
to = "quarterly", method = "denton-cholette" )
mu <- predict(mu)
markups_sector_q[ , j ] <- mu
}
rm(j, mu_a_j, mu_q_j, mu)
nice_load(file = "markupsdata.RData", object = c("output_q"), rename = NULL)
output_q <- subset( output_q, select = sectors )
View(output_q)
syear   <- 1995  #start year
eyear   <- 2019  #end year
#weight matrix
weights <- matrix( data = NA,
nrow = ( eyear - syear + 1 ) * 4,
ncol = length( nace ) )
colnames( weights ) <- sectors
#weights
for (t in 1:nrow( output_q )){
for (j in 1:ncol( output_q ) ){
totalrow        <- sum( output_q[ t, ] )
yjt             <- output_q[ t, j ]
weights[ t, j ] <- yjt /  totalrow
}
}
View(weights)
mu_micro <- matrix( data = syear:eyear,
nrow = ( eyear - syear + 1 ) * 4,
ncol = 1 )
View(mu_micro)
#aggregate markup
for (t in 1:nrow( mu_micro )){
mu_micro[t]  <- 1 / sum ( markups_weights[ t, ] )
}
rm( t, j)
rm( yjt, t, j)
View(mu_micro)
mu_micro <- matrix( data = syear:eyear,
nrow = ( eyear - syear + 1 ) * 4,
ncol = 1 )
View(mu_micro)
mu_micro <- matrix( data = NA,
nrow = ( eyear - syear + 1 ) * 4,
ncol = 1 )
#aggregate markup
for (t in 1:nrow( mu_micro )){
mu_micro[t]  <- 1 / sum ( markups_weights[ t, ] )
}
View(mu_micro)
nrow( mu_micro )
t = 1
markups_weights[ t, ]
markups_weights <- weights / markups_sector_q
#aggregate markup
for (t in 1:nrow( mu_micro )){
mu_micro[t]  <- 1 / sum ( markups_weights[ t, ] )
}
plot(mu_micro)
plot(mu_micro)
mu_micro <- ts( mu_micro, start = c( syear, 1 ) , frequency = 4 )
#sample dates
dates  <- seq(as.Date('1995-03-01'), as.Date('2019-12-01'), by='quarter')
data <- data.frame( mu = mu_micro, dates)
ggplot(data) + geom_line( aes(x = dates, y = mu), color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "", y= "") #+ ylab( TeX( "$\\hat{Y}$" ) )
View(data)
data <- data.frame( mu_micro, dates)
colnames(data) <- c( "mu", "dates")
ggplot(data) + geom_line( aes(x = dates, y = mu), color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "", y= "") #+ ylab( TeX( "$\\hat{Y}$" ) )
contribution <- matrix(NA,
nrow = nrow( markups_sector_q ),
ncol = ncol( markups_sector_q ) )
colnames( contribution_matrix ) <- sectors
for ( j in 1:length( sectors ) ) {
for ( t in 1:nrow( contribution ) ) {
contribution[ t, j ] <- ( markups_weights[ t , j ] / sum( markups_weights[ t , ] ) ) * 100
}
}
colnames( contribution ) <- sectors
for ( j in 1:length( sectors ) ) {
for ( t in 1:nrow( contribution ) ) {
contribution[ t, j ] <- ( markups_weights[ t , j ] / sum( markups_weights[ t , ] ) ) * 100
}
}
rm(t,j)
rm( totalrow, yjt, t, j)
contribution_crisis <- matrix( data = NA, nrow = length( sectors ), ncol = 3)
colnames(contribution_crisis) <- c("Sector", "Mean", "Standard Deviation")
contribution_crisis[,1]     <- sectors
for (j in 1:nrow( contribution_crisis )) {
contribution_crisis[j,2] <- round( mean( contribution[63:76,j] ), 2 )
contribution_crisis[j,3] <- round( sd( contribution[63:76,j] ), 2 )
}
rm(j)
View(contribution_crisis)
data <- data.frame( mu_micro[63:76,j], dates[63:76,j])
colnames(data) <- c( "mu", "dates")
data <- data.frame( mu_micro[63:76], dates[63:76] )
colnames(data) <- c( "mu", "dates")
ggplot(data) + geom_line( aes(x = dates, y = mu), color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "", y= "") #+ ylab( TeX( "$\\hat{Y}$" ) )
View(micro)
View(micro_mkp)
View(micro_mkp)
View(markups_sector)
time(markups_sector)
data = data.frame( dates, time(markups_sector))
View(data)
#Statistical classification of economic activities in the European Community
nace      <- c("A",
"B",
"C",
"D",
"E",
"F",
"G",
"H",
"I",
"J",
#"K",
"L",
"M",
"N",
#"O", Public administration and defence and compulsory social security were not considered
#"P",
#"Q",
"R",
"S"
)
sectors   <- c("Agriculture, forestry and fishing",
"Mining and quarrying",
"Manufacturing",
"Electricity, gas, steam and air conditioning supply",
"Water supply; sewerage, waste management and remediation activities",
"Construction",
"Wholesale and retail trade; repair of motor vehicles and motorcycles",
"Transportation and storage",
"Accommodation and food service activities",
"Information and communication",
#"Financial and insurance activities",
"Real estate activities",
"Professional, scientific and technical activities",
"Administrative and support service activities",
#"Public administration and defence; compulsory social security" were not conidered
#"Education",
#"Human health and social work activities",
"Arts, entertainment and recreation",
"Other service activities were removed"
)
nice_load(file = "markupsdata.RData", object = c("markups_sector"), rename = NULL)
markups_sector <- markups_sector[["Portugal"]]
markups_sector <- subset( markups_sector, select = sectors )
micro  <- read_dta(file = "agggregate_mkups_by_sector.dta")
colnames(micro) <- c("year", "nace", "markup", "shock")
micro_mkp <- matrix( data = NA,
nrow = 11,
ncol = length( sectors ) )
rownames( micro_mkp ) <- seq( 2004, 2014)
colnames( micro_mkp ) <- sectors
micro_mkp[1,] <- rep( 100, ncol(micro_mkp) )
for (j  in 1:length(nace)) {
for (t  in 2:nrow( micro_mkp )) {
n <- nace[j]
m <- subset( micro, nace == n )
micro_mkp[ t, j ] <- micro_mkp[t-1,j] * ( 1 + m$markup[t] )
}
}
rm(n, m, j, t)
markups_sector_q <- markups_sector[1:80, ]
for (j  in 1:length(nace)) {
mu_a_j  <- ts( micro_mkp[ , j ] * 4, start = 2004, frequency = 1 )
mu_q_j  <- ts( markups_sector[ , j ], start = c( 1995, 1), frequency = 4 )
mu <- td( mu_a_j ~ 0 + mu_q_j,
to = "quarterly", method = "denton-cholette" )
mu <- predict(mu)
markups_sector_q[ , j ] <- mu
}
#Statistical classification of economic activities in the European Community
nace      <- c("A",
"B",
"C",
"D",
"E",
"F",
"G",
"H",
"I",
"J",
#"K",
"L",
"M",
"N",
#"O", Public administration and defence and compulsory social security were not considered
#"P",
#"Q",
"R",
"S"
)
sectors   <- c("Agriculture, forestry and fishing",
"Mining and quarrying",
"Manufacturing",
"Electricity, gas, steam and air conditioning supply",
"Water supply; sewerage, waste management and remediation activities",
"Construction",
"Wholesale and retail trade; repair of motor vehicles and motorcycles",
"Transportation and storage",
"Accommodation and food service activities",
"Information and communication",
#"Financial and insurance activities",
"Real estate activities",
"Professional, scientific and technical activities",
"Administrative and support service activities",
#"Public administration and defence; compulsory social security" were not conidered
#"Education",
#"Human health and social work activities",
"Arts, entertainment and recreation",
"Other service activities were removed"
)
nice_load(file = "markupsdata.RData", object = c("markups_sector"), rename = NULL)
markups_sector <- markups_sector[["Portugal"]]
markups_sector <- subset( markups_sector, select = sectors )
micro  <- read_dta(file = "agggregate_mkups_by_sector.dta")
colnames(micro) <- c("year", "nace", "markup", "shock")
micro_mkp <- matrix( data = NA,
nrow = 11,
ncol = length( sectors ) )
rownames( micro_mkp ) <- seq( 2004, 2014)
colnames( micro_mkp ) <- sectors
micro_mkp[1,] <- rep( 100, ncol(micro_mkp) )
for (j  in 1:length(nace)) {
for (t  in 2:nrow( micro_mkp )) {
n <- nace[j]
m <- subset( micro, nace == n )
micro_mkp[ t, j ] <- micro_mkp[t-1,j] * ( 1 + m$markup[t] )
}
}
rm(n, m, j, t)
markups_sector_q <- markups_sector[1:80, ]
length(nace)
View(markups_sector)
for (j  in 1:length(nace)) {
mu_a_j  <- ts( micro_mkp[ , j ] * 4, start = 2004, frequency = 1 )
mu_q_j  <- ts( markups_sector[ 1:80, j ], start = c( 1995, 1), frequency = 4 )
mu <- td( mu_a_j ~ 0 + mu_q_j,
to = "quarterly", method = "denton-cholette" )
mu <- predict(mu)
markups_sector_q[ , j ] <- mu
}
rm(j, mu_a_j, mu_q_j, mu)
nice_load(file = "markupsdata.RData", object = c("output_q"), rename = NULL)
output_q <- subset( output_q[ 1:80, ], select = sectors )
syear   <- 1995  #start year
eyear   <- 2014  #end year
#weight matrix
weights <- matrix( data = NA,
nrow = ( eyear - syear + 1 ) * 4,
ncol = length( nace ) )
colnames( weights ) <- sectors
#weights
for (t in 1:nrow( output_q )){
for (j in 1:ncol( output_q ) ){
totalrow        <- sum( output_q[ t, ] )
yjt             <- output_q[ t, j ]
weights[ t, j ] <- yjt /  totalrow
}
}
rm( totalrow, yjt, t, j)
markups_weights <- weights / markups_sector_q
mu_micro <- matrix( data = NA,
nrow = ( eyear - syear + 1 ) * 4,
ncol = 1 )
#aggregate markup
for (t in 1:nrow( mu_micro )){
mu_micro[t]  <- 1 / sum ( markups_weights[ t, ] )
}
#sample dates
dates  <- seq(as.Date('1995-03-01'), as.Date('2019-12-01'), by='quarter')
#sample dates
dates  <- seq(as.Date('1995-03-01'), as.Date('2014-12-01'), by='quarter')
mu_micro <- ts( mu_micro, start = c( syear, 1 ) , frequency = 4 )
data <- data.frame( mu_micro, dates )
colnames(data) <- c( "mu", "dates")
ggplot(data) + geom_line( aes(x = dates, y = mu), color = "#0073D9", size = 1.5) +
theme_classic() + labs(x = "", y= "") #+ ylab( TeX( "$\\hat{Y}$" ) )
View(micro_mkp)
contribution <- matrix(NA,
nrow = nrow( markups_sector_q ),
ncol = ncol( markups_sector_q ) )
colnames( contribution ) <- sectors
for ( j in 1:length( sectors ) ) {
for ( t in 1:nrow( contribution ) ) {
contribution[ t, j ] <- ( markups_weights[ t , j ] / sum( markups_weights[ t , ] ) ) * 100
}
}
rm(t,j)
contribution_crisis <- matrix( data = NA, nrow = length( sectors ), ncol = 3)
colnames(contribution_crisis) <- c("Sector", "Mean", "Standard Deviation")
contribution_crisis[,1]     <- sectors
for (j in 1:nrow( contribution_crisis )) {
contribution_crisis[j,2] <- round( mean( contribution[63:76,j] ), 2 )
contribution_crisis[j,3] <- round( sd( contribution[63:76,j] ), 2 )
}
rm(j)
View(contribution_crisis)
save.image("C:/Users/jcfil/Google Drive/Documents/Papers/AcadÃªmicos/Research/Fiscal Consolidation and the Euro; the role of markups/sectorsdata.RData")
View(micro)
View(micro_mkp)
contribution_crisis   <- contribution_crisis[ order( contribution_crisis$mean ), ]
View(contribution_crisis)
contribution_crisis   <- contribution_crisis[ order( contribution_crisis$Mean ), ]
View(contribution_crisis)
contribution_crisis
View(contribution_crisis)
contribution_crisis   <- contribution_crisis[ order( contribution_crisis[, 2]  ), ]
View(contribution_crisis)
contribution_crisis[, 2]
View(contribution_crisis)
View(contribution_crisis)
?order
contribution_crisis   <- contribution_crisis[ order( contribution_crisis[, 2] decreasing = TRUE  ), ]
contribution_crisis   <- contribution_crisis[ order( contribution_crisis[, 2], decreasing = TRUE  ), ]
View(contribution_crisis)
contribution_crisis   <- contribution_crisis[ order( contribution_crisis[, 1], decreasing = TRUE  ), ]
View(contribution_crisis)
contribution_crisis   <- contribution_crisis[ order( contribution_crisis[, 3], decreasing = TRUE  ), ]
View(contribution_crisis)
contribution_crisis   <- contribution_crisis[ order( contribution_crisis[, 2],
decreasing = TRUE  ), ]
View(contribution_crisis)
View(contribution_crisis)
contribution_crisis
contribution_crisis <- matrix( data = NA, nrow = length( sectors ), ncol = 3)
colnames(contribution_crisis) <- c("Sector", "Mean", "Standard Deviation")
contribution_crisis[,1]     <- sectors
for (j in 1:nrow( contribution_crisis )) {
contribution_crisis[j,2] <- as.numeric( round( mean( contribution[63:76,j] ), 2 ) )
contribution_crisis[j,3] <- round( sd( contribution[63:76,j] ), 2 )
}
rm(j)
contribution_crisis
contribution_crisis   <- contribution_crisis[ order( contribution_crisis[, 2],
decreasing = TRUE  ), ]
View(contribution_crisis)
contribution_crisis <- matrix( data = NA, nrow = length( sectors ), ncol = 3)
colnames(contribution_crisis) <- c("Sector", "Mean", "Standard Deviation")
contribution_crisis[,1]     <- sectors
for (j in 1:nrow( contribution_crisis )) {
contribution_crisis[j,2] <- as.numeric( round( mean( contribution[63:76,j] ), 2 ) )
contribution_crisis[j,3] <- as.numeric( round( sd( contribution[63:76,j] ), 2 ) )
}
rm(j)
contribution_crisis <- matrix( data = NA, nrow = length( sectors ), ncol = 3)
colnames(contribution_crisis) <- c("Sector", "Mean", "Standard Deviation")
for (j in 1:nrow( contribution_crisis )) {
contribution_crisis[j,2] <- round( mean( contribution[63:76,j] ), 2 ) )
contribution_crisis[j,3] <- round( sd( contribution[63:76,j] ), 2 ) )
}
for (j in 1:nrow( contribution_crisis )) {
contribution_crisis[j,2] <- round( mean( contribution[63:76,j] ), 2 )
contribution_crisis[j,3] <- round( sd( contribution[63:76,j] ), 2 )
}
View(contribution_crisis)
contribution_crisis[,1]     <- sectors
View(contribution_crisis)
contribution_crisis <- matrix( data = NA, nrow = length( sectors ), ncol = 2)
colnames(contribution_crisis) <- c("Mean", "Standard Deviation")
for (j in 1:nrow( contribution_crisis )) {
contribution_crisis[j,1] <- round( mean( contribution[63:76,j] ), 2 )
contribution_crisis[j,2] <- round( sd( contribution[63:76,j] ), 2 )
}
rm(j)
View(contribution_crisis)
contribution_crisis <- data.frame( sectors,
contribution_crisis[1],
contribution_crisis[2])
View(contribution_crisis)
colnames(contribution_crisis) <- c("Sectors", "Mean", "Standard Deviation")
View(contribution_crisis)
contribution_crisis <- matrix( data = NA, nrow = length( sectors ), ncol = 2)
colnames(contribution_crisis) <- c("Mean", "Standard Deviation")
for (j in 1:nrow( contribution_crisis )) {
contribution_crisis[j,1] <- round( mean( contribution[63:76,j] ), 2 )
contribution_crisis[j,2] <- round( sd( contribution[63:76,j] ), 2 )
}
rm(j)
contribution_crisis <- data.frame( sectors,
contribution_crisis[,1],
contribution_crisis[,2])
colnames(contribution_crisis) <- c("Sectors", "Mean", "Standard Deviation")
View(contribution_crisis)
contribution_crisis   <- contribution_crisis[ order( contribution_crisis$Mean,
decreasing = TRUE  ), ]
View(contribution_crisis)
save.image("C:/Users/jcfil/Google Drive/Documents/Papers/AcadÃªmicos/Research/Fiscal Consolidation and the Euro; the role of markups/sectorsdata.RData")
View(micro_mkp)
?seq
dates  <- seq(as.Date('2004-03-01'), as.Date('2014-12-01'), by='years')
dates  <- seq(as.Date('2004-03-01'), as.Date('2014-12-01'), by='years')
data <- data.frame( mu    = micro_mkp[ , j ],
dates = dates )
j = 1
data <- data.frame( mu    = micro_mkp[ , j ],
dates = dates )
ggplot(data) + geom_line(aes(x = dates, y =  mu ), size = 0.8) +
theme_bw() +
#  geom_rect(data=recessions, aes(xmin=Peak,
#                                 xmax=Trough, ymin=-Inf, ymax=+Inf), fill='gray', alpha=0.2) +
labs(x = "") + ylab( TeX( "$\\mu^j$" ) ) + theme(aspect.ratio=1) +
ggtitle( sectors[ j ] ) +
theme(plot.title = element_text( hjust = 0.5) ) + theme(text = element_text(size=16) )
dates  <- seq(as.Date('2004-03-01'), as.Date('2014-12-01'), by='quarter')
library(vars)
install.packages("svars")
library(ipeadatar)
search <- as.data.frame( search_series( terms = "deflator",
fields = c('name'), language = "br" ) )
View(search)
