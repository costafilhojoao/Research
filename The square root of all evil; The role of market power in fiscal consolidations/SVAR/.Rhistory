library(OECD)       # OECD database
browse_metadata("HISTPOP")
library(lodown)
install.packages(
"lodown"
)
library(devtools)
install_version("lodown")
install_version("lodown", version = "0.1.0")
install_github( "ajdamico/lodown" , dependencies = TRUE )
install.packages("SAScii")
install.packages("SAScii")
sessionInfo()
install_github( "ajdamico/lodown" , dependencies = TRUE )
.libPaths()
install.packages(c("rbcb", "xts"))
install.packages(c("dineq", "dplyr", "ggplot2", "tidycensus", "tidyverse"))
install_github( "ajdamico/lodown" , dependencies = TRUE )
install.packages( "devtools" , repos = "http://cran.rstudio.com/" )
library(devtools)
install_github( "ajdamico/lodown" , dependencies = TRUE )
library(lodown)
library(ggplot2)
lodown( "ahs" , output_dir = file.path( path.expand( "~" ) , "AHS" ) )
ahs_cat <-
get_catalog( "ahs" ,
output_dir = file.path( path.expand( "~" ) , "AHS" ) )
ahs_cat <- subset( ahs_cat , year == 2013 )
ahs_cat <- subset( ahs_cat , year == 2013 )
ahs_cat <-
get_catalog( "ahs" ,
output_dir = file.path( path.expand( "~" ) , "AHS" ) )
ahs_cat
library(lodown)
ahs_cat <-
get_catalog( "ahs" ,
output_dir = file.path( path.expand( "~" ) , "AHS" ) )
?lodown
inatall.packages("tfestimators")
install.packages(tfestimators)
install.packages( tfestimators")
install.packages("tfestimators")
library(tensorflow)
install_tensorflow()
install_tensorflow(envname = "TF2R",version =  "2.2.0")
library(rsconnect)
deployApp()
usethis::create_project("atividade")
uf
library(BETS)
library(mFilter)
library(ggplot2)
#ipca        <- BETS.get(433, from='2012-03-01')
#ipca        <- ipca[-length(ipca)]
#ipca        <- ipca[-length(ipca)]
#ipca        <- ts(ipca, start=c(2012,3), freq=12)
desemprego  <- BETSget(24369, from='2012-03-01')
ddesemprego <- diff(desemprego)
selic       <- BETSget(4390, from='2012-03-01')
selic       <- selic$value[-length(selic)]
selic       <- selic[-length(selic)]
dselic      <- diff(selic)
dselic      <- ts(dselic, start=c(2012,3), freq=12)
ibc         <- BETSget(24364, from='2012-03-01')
gap         <- hpfilter(ibc$value, freq=14400, type='lambda')$cycle
gap         <- ts(gap, start=c(2012,3), freq=12)
dummies     <- seasonaldummy(ipca)
data        <- ts.intersect(ddesemprego, gap, dselic)
VARselect(data, lag.max = 12, season=12, type='const')
#var <- VAR(data, 1, type='const', exogen = dummies)
var <- VAR(data, p = 1, type='const')
data        <- ts.intersect(ddesemprego, gap, dselic)
VARselect(data, lag.max = 12, season=12, type='const')
detach("package:BETS", unload = TRUE)
library(vars)
VARselect(data, lag.max = 12, season=12, type='const')
#var <- VAR(data, 1, type='const', exogen = dummies)
var <- VAR(data, p = 1, type='const')
#roots(var)
#serial.test(var)
#normality.test(var)
#arch.test(var)
#plot(serial.test(var))
#reccusum <- stability(var, type='OLS-CUSUM')
#plot(reccusum)
#fdummies <- tail(dummies, 12)
#fvar <- predict(var, n.ahead=12, ci=.5, dumvar=fdummies)
fvar <- predict(var, n.ahead=12, ci=.5)
unem <- ts(c((fvar$fcst$ddesemprego[1,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+fvar$fcst$ddesemprego[4,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+fvar$fcst$ddesemprego[4,1]+fvar$fcst$ddesemprego[5,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+fvar$fcst$ddesemprego[4,1]+fvar$fcst$ddesemprego[5,1]+fvar$fcst$ddesemprego[6,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+fvar$fcst$ddesemprego[4,1]+fvar$fcst$ddesemprego[5,1]+fvar$fcst$ddesemprego[6,1]+fvar$fcst$ddesemprego[7,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+fvar$fcst$ddesemprego[4,1]+fvar$fcst$ddesemprego[5,1]+fvar$fcst$ddesemprego[6,1]+fvar$fcst$ddesemprego[7,1]+fvar$fcst$ddesemprego[8,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+fvar$fcst$ddesemprego[4,1]+fvar$fcst$ddesemprego[5,1]+fvar$fcst$ddesemprego[6,1]+fvar$fcst$ddesemprego[7,1]+fvar$fcst$ddesemprego[8,1]+fvar$fcst$ddesemprego[9,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+fvar$fcst$ddesemprego[4,1]+fvar$fcst$ddesemprego[5,1]+fvar$fcst$ddesemprego[6,1]+fvar$fcst$ddesemprego[7,1]+fvar$fcst$ddesemprego[8,1]+fvar$fcst$ddesemprego[9,1]+fvar$fcst$ddesemprego[10,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+fvar$fcst$ddesemprego[4,1]+fvar$fcst$ddesemprego[5,1]+fvar$fcst$ddesemprego[6,1]+fvar$fcst$ddesemprego[7,1]+fvar$fcst$ddesemprego[8,1]+fvar$fcst$ddesemprego[9,1]+fvar$fcst$ddesemprego[10,1]+fvar$fcst$ddesemprego[11,1]+desemprego[length(desemprego)]),
(fvar$fcst$ddesemprego[1,1]+fvar$fcst$ddesemprego[2,1]+fvar$fcst$ddesemprego[3,1]+fvar$fcst$ddesemprego[4,1]+fvar$fcst$ddesemprego[5,1]+fvar$fcst$ddesemprego[6,1]+fvar$fcst$ddesemprego[7,1]+fvar$fcst$ddesemprego[8,1]+fvar$fcst$ddesemprego[9,1]+fvar$fcst$ddesemprego[10,1]+fvar$fcst$ddesemprego[11,1]+fvar$fcst$ddesemprego[12,1]+desemprego[length(desemprego)])), start=c(2018,1), freq=12)
dates <- seq(as.Date('2022-07-01'), as.Date('2023-06-01'), by='1 month')
u <- ts( c( desemprego, unem ), start = c( 2012, 3), frequency = 12 )
max.len = max( length(u) )
uf = c( rep(NA, max.len - length( unem ) ), unem )
interest <- ts(c((fvar$fcst$dselic[1,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+fvar$fcst$dselic[4,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+fvar$fcst$dselic[4,1]+fvar$fcst$dselic[5,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+fvar$fcst$dselic[4,1]+fvar$fcst$dselic[5,1]+fvar$fcst$dselic[6,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+fvar$fcst$dselic[4,1]+fvar$fcst$dselic[5,1]+fvar$fcst$dselic[6,1]+fvar$fcst$dselic[7,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+fvar$fcst$dselic[4,1]+fvar$fcst$dselic[5,1]+fvar$fcst$dselic[6,1]+fvar$fcst$dselic[7,1]+fvar$fcst$dselic[8,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+fvar$fcst$dselic[4,1]+fvar$fcst$dselic[5,1]+fvar$fcst$dselic[6,1]+fvar$fcst$dselic[7,1]+fvar$fcst$dselic[8,1]+fvar$fcst$dselic[9,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+fvar$fcst$dselic[4,1]+fvar$fcst$dselic[5,1]+fvar$fcst$dselic[6,1]+fvar$fcst$dselic[7,1]+fvar$fcst$dselic[8,1]+fvar$fcst$dselic[9,1]+fvar$fcst$dselic[10,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+fvar$fcst$dselic[4,1]+fvar$fcst$dselic[5,1]+fvar$fcst$dselic[6,1]+fvar$fcst$dselic[7,1]+fvar$fcst$dselic[8,1]+fvar$fcst$dselic[9,1]+fvar$fcst$dselic[10,1]+fvar$fcst$dselic[11,1]+selic[length(selic)]),
(fvar$fcst$dselic[1,1]+fvar$fcst$dselic[2,1]+fvar$fcst$dselic[3,1]+fvar$fcst$dselic[4,1]+fvar$fcst$dselic[5,1]+fvar$fcst$dselic[6,1]+fvar$fcst$dselic[7,1]+fvar$fcst$dselic[8,1]+fvar$fcst$dselic[9,1]+fvar$fcst$dselic[10,1]+fvar$fcst$dselic[11,1]+fvar$fcst$dselic[12,1]+selic[length(selic)])), start=c(2018,1), freq=12)
i <- ts( c( ( ( 1 + selic / 100 ) ^ 12 - 1 ) * 100, ( ( 1 + interest / 100 ) ^ 12 - 1 ) * 100 ), start = c( 2012, 3), frequency = 12 )
max.len = max( length(i) )
ifor = c( rep(NA, max.len - length( interest ) ),
( ( 1 + interest / 100 ) ^ 12 - 1 ) * 100 )
save.image("G:/Meu Drive/Documents/Computational Economics/Code/Forecasting with DSGE/VAR/varData.RData")
uf
data = data.frame( u, dates=time( u ), uf  )
View(data)
data = data.frame( i, dates=time( i ), ifor  )
View(data)
setwd("G:/Meu Drive/Documents/Papers/AcadÃªmicos/Research/The square root of all evil; The role of market power in fiscal consolidations/SVAR")
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
library(nicethings)
library(vars)
library(lpirfs)
library(ggplot2)
library(gridExtra)
nice_load(file = "svardata.RData", object = c("g", "t", "y", "mu"), rename = NULL)
nice_load(file = "svardata.RData", object = c("g", "t", "y", "mu"), rename = NULL)
nice_load(file = "svardata.RData", object = "t", rename = NULL)
nice_load(file = "svardata.RData", object = "y", rename = NULL)
nice_load(file = "svardata.RData", object = "mu", rename = NULL)
data <-  data.frame( cbind( g, t, y, mu ) )
y
round( y, 2 )
plot( y )
down    <-  rep( x=c(0), times= length( mu ) )
up      <-  down
state   <-  data.frame( down=down, up=up )
for ( i in 1:length( mu ) ){
if ( mu[i] < 0){
state$down[i] <- 1
}else{
state$up[i] <- 1
}
}
# variavel para capturar os regimes
switching_data <-  state$down
## Determinando a ordem do VAR
infocrit = VARselect(data, lag.max = 12, type = "const" )
lp <- lp_nl(data,
lags_endog_lin = infocrit$selection["HQ(n)"],
lags_endog_nl  = infocrit$selection["HQ(n)"],
trend = 0,
switching = switching_data,
shock_type = 0,
confint = 1.96,
hor = 12,
use_logistic = FALSE)
data_graphs <- data.frame( lp[["irf_s1_mean"]][ , , 1][ 3, ] * 100,
lp[["irf_s1_low"]][ , , 1][ 3, ] * 100,
lp[["irf_s1_up"]][ , , 1][ 3, ] * 100,
zeros = rep( 0, length( lp[["irf_s1_mean"]][ , , 1][ 3, ] ) ),
periods = seq( 1:length( lp[["irf_s1_mean"]][ , , 1][ 3, ] ) ) )
colnames(data_graphs) <- c("response", "lower", "upper", "zeros", "periods")
p1 <- ggplot(data_graphs) + geom_line( aes(x = periods, y = response), color = "darkorange", size = 1.5) +
geom_line( aes(x = periods, y = zeros), colour = "black", linetype = "dashed", size = 0.75) +
theme_classic() + labs(x = "", y = "", title = "UP State") +
geom_ribbon( aes(y = response, x = periods, ymin=lower, ymax=upper),
alpha = 0.2 ) + theme(text = element_text(size=16) )
data_graphs <- data.frame( lp[["irf_s2_mean"]][ , , 1][ 3, ] * 100,
lp[["irf_s2_low"]][ , , 1][ 3, ] * 100,
lp[["irf_s2_up"]][ , , 1][ 3, ] * 100,
zeros = rep( 0, length( lp[["irf_s2_mean"]][ , , 1][ 3, ] ) ),
periods = seq( 1:length( lp[["irf_s2_mean"]][ , , 1][ 3, ] ) ) )
colnames(data_graphs) <- c("response", "lower", "upper", "zeros", "periods")
p2 <- ggplot(data_graphs) + geom_line( aes(x = periods, y = response), color = "#0073D9", size = 1.5) +
geom_line( aes(x = periods, y = zeros), colour = "black", linetype = "dashed", size = 0.75) +
theme_classic() + labs(x = "", y = "", title = "Down State") +
geom_ribbon( aes(y = response, x = periods, ymin=lower, ymax=upper),
alpha = 0.2 ) + theme(text = element_text(size=16) )
grid.arrange( p1, p2 )
setwd("G:/Meu Drive/Documents/Papers/AcadÃªmicos/Research/The square root of all evil; The role of market power in fiscal consolidations/SVAR")
rm(list = ls())  # clear the memory
graphics.off()   # close graphs
load("lpdata.RData")
m1 = round( cumsum( lp[["irf_s1_mean"]][ , , 1][ 3, ] ) / lp[["irf_s1_mean"]][ , , 1][ 3, 1], 2 )
m2 = round( cumsum( lp[["irf_s2_mean"]][ , , 1][ 3, ] ) / lp[["irf_s2_mean"]][ , , 1][ 3, 1], 2 )
save.image("G:/Meu Drive/Documents/Papers/AcadÃªmicos/Research/The square root of all evil; The role of market power in fiscal consolidations/SVAR/lpdata.RData")
data_graphs <- data.frame( m1,
m2,
ones = rep( 1, length( m1 ) ),
periods = seq( 1:length( m1 ) ) )
colnames(data_graphs) <- c("m1", "m2", "ones", "periods")
ggplot(data_graphs) + geom_line( aes(x = periods, y = m1), color = "darkorange", size = 1.5) +
geom_line( aes(x = periods, y = m2), color = "#0073D9", size = 1.5) +
geom_line( aes(x = periods, y = ones), colour = "black", linetype = "dashed", size = 0.75) +
theme_classic() + labs(x = "Quarters after the shock", y = "", title = "Government spending multipliers")
library(ggplot2)
library(gridExtra)
ggplot(data_graphs) + geom_line( aes(x = periods, y = m1), color = "darkorange", size = 1.5) +
geom_line( aes(x = periods, y = m2), color = "#0073D9", size = 1.5) +
geom_line( aes(x = periods, y = ones), colour = "black", linetype = "dashed", size = 0.75) +
theme_classic() + labs(x = "Quarters after the shock", y = "", title = "Government spending multipliers")
lp <- lp_nl(data,
lags_endog_lin = infocrit$selection["HQ(n)"],
lags_endog_nl  = infocrit$selection["HQ(n)"],
trend = 0,
switching = switching_data,
shock_type = 0,
confint = 1.96,
hor = 4,
use_logistic = FALSE)
library(lpirfs)
lp <- lp_nl(data,
lags_endog_lin = infocrit$selection["HQ(n)"],
lags_endog_nl  = infocrit$selection["HQ(n)"],
trend = 0,
switching = switching_data,
shock_type = 0,
confint = 1.96,
hor = 4,
use_logistic = FALSE)
lp <- lp_nl(data,
lags_endog_lin = infocrit$selection["HQ(n)"],
lags_endog_nl  = infocrit$selection["HQ(n)"],
trend = 0,
switching = switching_data,
shock_type = 0,
confint = 1.96,
hor = 12,
use_logistic = FALSE)
lp[["irf_s1_mean"]][ , , 1][ 3, ]
sum( lp[["irf_s1_mean"]][ , , 1][ 3, ] )
sum( lp[["irf_s1_mean"]][ , , 1][ 3, ] ) / lp[["irf_s1_mean"]][ , , 1][ 3, 1], 2 )
lp[["irf_s1_mean"]][ , , 1][ 3, 1], 2 )
sum( lp[["irf_s1_mean"]][ , , 1][ 3, ] ) / lp[["irf_s1_mean"]][ , , 1][ 3, 1], 2 ) / lp[["irf_s1_mean"]][ , , 1][ 3, 1]
lp[["irf_s1_mean"]][ , , 1][ 3, 1]
sum( lp[["irf_s1_mean"]][ , , 1][ 3, ] ) / lp[["irf_s1_mean"]][ , , 1][ 3, 1], 2 )
sum( lp[["irf_s1_mean"]][ , , 1][ 3, ] ) / lp[["irf_s1_mean"]][ , , 1][ 3, 1]) / lp[["irf_s1_mean"]][ , , 1][ 3, 1]
sum( lp[["irf_s1_mean"]][ , , 1][ 3, ] )
sum( lp[["irf_s1_mean"]][ , , 1][ 3, ] ) / lp[["irf_s1_mean"]][ , , 1][ 3, 1]
m1
( lp[["irf_s1_mean"]][ , , 1][ 3, 1 ] + lp[["irf_s1_mean"]][ , , 1][ 3, 2 ]) / lp[["irf_s1_mean"]][ , , 1][ 3, 1]
m1
data_graphs <- data.frame( m1[1:4],
m2[1:4],
ones = rep( 1, length( m1[1:4] ) ),
periods = seq( 1:length( m1[1:4] ) ) )
colnames(data_graphs) <- c("m1", "m2", "ones", "periods")
ggplot(data_graphs) + geom_line( aes(x = periods, y = m1), color = "darkorange", size = 1.5) +
geom_line( aes(x = periods, y = m2), color = "#0073D9", size = 1.5) +
geom_line( aes(x = periods, y = ones), colour = "black", linetype = "dashed", size = 0.75) +
theme_classic() + labs(x = "Quarters after the shock", y = "", title = "Government spending multipliers")
save.image("G:/Meu Drive/Documents/Papers/AcadÃªmicos/Research/The square root of all evil; The role of market power in fiscal consolidations/SVAR/lpdata.RData")
m3 = round( cumsum( lp[["irf_s1_mean"]][ , , 1][ 2, ] ) / lp[["irf_s1_mean"]][ , , 1][ 2, 1], 2 )
m4 = round( cumsum( lp[["irf_s2_mean"]][ , , 1][ 2, ] ) / lp[["irf_s2_mean"]][ , , 1][ 2, 1], 2 )
data_graphs <- data.frame( m3[1:4],
m4[1:4],
ones = rep( 1, length( m3[1:4] ) ),
periods = seq( 1:length( m3[1:4] ) ) )
colnames(data_graphs) <- c("m3", "m4", "ones", "periods")
ggplot(data_graphs) + geom_line( aes(x = periods, y = m3), color = "darkorange", size = 1.5) +
geom_line( aes(x = periods, y = m4), color = "#0073D9", size = 1.5) +
geom_line( aes(x = periods, y = ones), colour = "black", linetype = "dashed", size = 0.75) +
theme_classic() + labs(x = "Quarters after the shock", y = "", title = "Government revenues multipliers")
m3[1:4]
m4[1:4]
m3 = round( cumsum( lp[["irf_s1_mean"]][ , , 1][ 4, ] ) / lp[["irf_s1_mean"]][ , , 1][ 4, 1], 2 )
m4 = round( cumsum( lp[["irf_s2_mean"]][ , , 1][ 4, ] ) / lp[["irf_s2_mean"]][ , , 1][ 4, 1], 2 )
data_graphs <- data.frame( m3[1:4],
m4[1:4],
ones = rep( 1, length( m3[1:4] ) ),
periods = seq( 1:length( m3[1:4] ) ) )
colnames(data_graphs) <- c("m3", "m4", "ones", "periods")
ggplot(data_graphs) + geom_line( aes(x = periods, y = m3), color = "darkorange", size = 1.5) +
geom_line( aes(x = periods, y = m4), color = "#0073D9", size = 1.5) +
geom_line( aes(x = periods, y = ones), colour = "black", linetype = "dashed", size = 0.75) +
theme_classic() + labs(x = "Quarters after the shock", y = "", title = "Government revenues multipliers")
